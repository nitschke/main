(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    360163,       7259]
NotebookOptionsPosition[    355689,       7125]
NotebookOutlinePosition[    356027,       7140]
CellTagsIndexPosition[    355984,       7137]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "FormsAndVectors`"}], "\[IndentingNewLine]", 
 RowBox[{"SetOptions", "[", 
  RowBox[{"Simplify", ",", 
   RowBox[{"Trig", "\[Rule]", "False"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "u", "]"}], "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "v", "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "v", "]"}], "^", "2"}]}], "\[Equal]", "1"}], "&&", 
     RowBox[{"u", ">", "0"}], "&&", 
     RowBox[{"u", "<", 
      RowBox[{"2", "\[Pi]"}]}], "&&", 
     RowBox[{"v", ">", "0"}], "&&", 
     RowBox[{"v", "<", 
      RowBox[{"2", "\[Pi]"}]}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetSystemOptions", "[", 
  RowBox[{"\"\<SimplificationOptions\>\"", "\[Rule]", 
   RowBox[{"\"\<AutosimplifyTrigs\>\"", "\[Rule]", "False"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.660886582815978*^9, 3.660886585941598*^9}, {
   3.660887555230939*^9, 3.660887557041255*^9}, {3.660887598370351*^9, 
   3.660887625125358*^9}, 3.660887918201621*^9, {3.660888504102601*^9, 
   3.660888512988606*^9}, {3.6608887216183023`*^9, 3.660888722331262*^9}, {
   3.667110559381126*^9, 3.667110579985487*^9}, {3.669532712220084*^9, 
   3.6695327569206457`*^9}, {3.669547755302931*^9, 3.669547765225366*^9}, {
   3.670124268859475*^9, 3.670124350483941*^9}, {3.6701243877719088`*^9, 
   3.670124390739265*^9}, {3.67012519978423*^9, 3.670125210306185*^9}, {
   3.670125254240157*^9, 3.6701252563493567`*^9}, {3.670125332163885*^9, 
   3.67012536323606*^9}, 3.6701269823240643`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "u", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "u", "]"}], "2"]}], "\[Equal]", "1"}], "&&", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}], "\[Equal]", "1"}], "&&", 
     RowBox[{"u", ">", "0"}], "&&", 
     RowBox[{"u", "<", 
      RowBox[{"2", " ", "\[Pi]"}]}], "&&", 
     RowBox[{"v", ">", "0"}], "&&", 
     RowBox[{"v", "<", 
      RowBox[{"2", " ", "\[Pi]"}]}]}]}], ",", 
   RowBox[{"ComplexityFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ExcludedForms", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"TimeConstraint", "\[Rule]", "300"}], ",", 
   RowBox[{"TransformationFunctions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Trig", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.669532761211318*^9, 3.669533842454494*^9, 3.66953438207693*^9, 
   3.669547447642988*^9, 3.6695477161808453`*^9, 3.669547766875204*^9, {
   3.669547819993307*^9, 3.6695478551344976`*^9}, 3.670124173928281*^9, 
   3.670124273687666*^9, 3.67012435723693*^9, 3.670124400395885*^9, 
   3.670124609755086*^9, 3.670125215716646*^9, 3.670125260356041*^9, {
   3.6701253413701487`*^9, 3.670125368528565*^9}, 3.6701263320084457`*^9, 
   3.670127032023381*^9, 3.6701310912817698`*^9, {3.670227758938599*^9, 
   3.670227767543642*^9}, 3.670310057122324*^9, 3.670835269533752*^9, 
   3.670835659261017*^9, 3.670840208385548*^9}],

Cell[BoxData[
 RowBox[{"\<\"SimplificationOptions\"\>", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"AssumptionsMaxNonlinearVariables\"\>", "\[Rule]", "4"}], ",", 
    RowBox[{"\<\"AssumptionsMaxVariables\"\>", "\[Rule]", "21"}], ",", 
    RowBox[{"\<\"AutosimplifyTrigs\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"AutosimplifyTwoArgumentLog\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"FiniteSumMaxTerms\"\>", "\[Rule]", "30"}], ",", 
    RowBox[{"\<\"FunctionExpandMaxSteps\"\>", "\[Rule]", "15"}], ",", 
    RowBox[{"\<\"ListableFirst\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"RestartELProver\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"SimplifyMaxExponents\"\>", "\[Rule]", "100"}], ",", 
    RowBox[{"\<\"SimplifyToPiecewise\"\>", "\[Rule]", "True"}]}], 
   "}"}]}]], "Output",
 CellChangeTimes->{
  3.669532761211318*^9, 3.669533842454494*^9, 3.66953438207693*^9, 
   3.669547447642988*^9, 3.6695477161808453`*^9, 3.669547766875204*^9, {
   3.669547819993307*^9, 3.6695478551344976`*^9}, 3.670124173928281*^9, 
   3.670124273687666*^9, 3.67012435723693*^9, 3.670124400395885*^9, 
   3.670124609755086*^9, 3.670125215716646*^9, 3.670125260356041*^9, {
   3.6701253413701487`*^9, 3.670125368528565*^9}, 3.6701263320084457`*^9, 
   3.670127032023381*^9, 3.6701310912817698`*^9, {3.670227758938599*^9, 
   3.670227767543642*^9}, 3.670310057122324*^9, 3.670835269533752*^9, 
   3.670835659261017*^9, 3.670840208387271*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", 
   RowBox[{"Csc", ",", "Sec"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{"Csc", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"HoldForm", "[", 
    RowBox[{"1", "/", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{"Sec", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"HoldForm", "[", 
    RowBox[{"1", "/", 
     RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"Csc", ",", "Sec"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.66954764885574*^9, 3.669547648857328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"cx", "=", 
    RowBox[{
     RowBox[{"1", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"cy", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], "\[IndentingNewLine]", "cz"}], "=", 
         RowBox[{"3", "/", "2"}]}]}], "*)"}], "\[IndentingNewLine]", "cy"}], 
     "=", 
     RowBox[{
      RowBox[{"1", "\[IndentingNewLine]", "cz"}], "=", 
      RowBox[{
       RowBox[{"1", "\[IndentingNewLine]", "X"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"cx", "*", 
            RowBox[{"Sin", "[", "u", "]"}], 
            RowBox[{"Cos", "[", "v", "]"}]}], ",", 
           RowBox[{"cy", "*", 
            RowBox[{"Sin", "[", "u", "]"}], 
            RowBox[{"Sin", "[", "v", "]"}]}], ",", 
           RowBox[{"cz", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], "}"}], "\[IndentingNewLine]", 
         "subsR3"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "u", "]"}], "\[Rule]", 
             RowBox[{"z", "/", "cz"}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "u", "]"}], "\[Rule]", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"Cos", "[", "u", "]"}], "^", "2"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Cos", "[", "v", "]"}], "\[Rule]", 
             RowBox[{"x", "/", 
              RowBox[{"(", 
               RowBox[{"cx", "*", 
                RowBox[{"Sin", "[", "u", "]"}]}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "v", "]"}], "\[Rule]", 
             RowBox[{"y", "/", 
              RowBox[{"(", 
               RowBox[{"cy", "*", 
                RowBox[{"Sin", "[", "u", "]"}]}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"2", "*", "u"}], "]"}], "->", 
             RowBox[{"2", "*", 
              RowBox[{"Sin", "[", "u", "]"}], "*", 
              RowBox[{"Cos", "[", "u", "]"}]}]}]}], "}"}], 
          "\[IndentingNewLine]", 
          RowBox[{"TrigSub", "[", 
           RowBox[{"expr_", ",", "subs_"}], "]"}]}], ":=", 
         RowBox[{
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{
              RowBox[{"SetSystemOptions", "[", 
               RowBox[{"\"\<SimplificationOptions\>\"", "\[Rule]", 
                RowBox[{"\"\<AutosimplifyTrigs\>\"", "\[Rule]", "False"}]}], 
               "]"}], ";", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"TrigExpand", "[", 
                  RowBox[{"TrigFactor", "[", 
                   RowBox[{
                    RowBox[{"TrigExpand", "[", "expr", "]"}], "//.", "subs"}],
                    "]"}], "]"}], "//.", "subs"}], ")"}], "//", 
               "Simplify"}]}]}], "]"}], "\[IndentingNewLine]", "zSub"}], "=", 
          
          RowBox[{"{", 
           RowBox[{"z", "\[Rule]", 
            RowBox[{"cz", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"y", "^", "2"}], "/", 
                RowBox[{"cy", "^", "2"}]}], "-", 
               RowBox[{
                RowBox[{"x", "^", "2"}], "/", 
                RowBox[{"cx", "^", "2"}]}]}], "]"}]}]}], "}"}]}]}]}]}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"R", "=", "2"}], "\[IndentingNewLine]", 
   RowBox[{"r", "=", 
    RowBox[{"1", "/", "2"}]}], "\[IndentingNewLine]", 
   RowBox[{"X", "=", 
    RowBox[{
     RowBox[{"R", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], ",", "0", ",", 
        RowBox[{"Sin", "[", "u", "]"}]}], "}"}]}], "+", 
     RowBox[{"r", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], "*", 
         RowBox[{"Cos", "[", "v", "]"}]}], ",", 
        RowBox[{"Sin", "[", "v", "]"}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], "*", 
         RowBox[{"Cos", "[", "v", "]"}]}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"g", "=", 
    RowBox[{
     RowBox[{"MetricFromPara", "[", 
      RowBox[{"X", ",", "u", ",", "v"}], "]"}], "//", "FullSimplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"gInv", "=", 
    RowBox[{
     RowBox[{"Inverse", "[", "g", "]"}], "//", "FullSimplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"vol", "=", " ", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"Det", "[", "g", "]"}], "]"}], "//", "FullSimplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"$Assumptions", "=", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "u"}], "&&", 
     RowBox[{"u", "<", 
      RowBox[{"2", "\[Pi]"}]}], "&&", 
     RowBox[{"0", "\[LessEqual]", "v"}], "&&", 
     RowBox[{"v", "<", 
      RowBox[{"2", "\[Pi]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"repRulesPlus", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "v", "]"}], "\[Rule]", 
       RowBox[{"y", "/", "r"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], "\[Rule]", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"Sin", "[", "v", "]"}], "^", "2"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], "\[Rule]", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"R", "+", 
          RowBox[{"r", "*", 
           RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], "\[Rule]", 
       RowBox[{"z", "/", 
        RowBox[{"(", 
         RowBox[{"R", "+", 
          RowBox[{"r", "*", 
           RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}]}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"repRulesMinus", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "v", "]"}], "\[Rule]", 
       RowBox[{"y", "/", "r"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"Sin", "[", "v", "]"}], "^", "2"}]}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], "\[Rule]", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"R", "+", 
          RowBox[{"r", "*", 
           RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], "\[Rule]", 
       RowBox[{"z", "/", 
        RowBox[{"(", 
         RowBox[{"R", "+", 
          RowBox[{"r", "*", 
           RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}]}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{"X", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "z"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6608865944797497`*^9, 3.66088683904193*^9}, {
   3.660886882978071*^9, 3.660886899571871*^9}, {3.6608869819063683`*^9, 
   3.660887110713608*^9}, {3.660887154729331*^9, 3.6608871685584993`*^9}, {
   3.6608873108524723`*^9, 3.6608873190168667`*^9}, {3.660887581401524*^9, 
   3.660887583226614*^9}, {3.6608889927598877`*^9, 3.660889038596698*^9}, {
   3.6608891181212873`*^9, 3.660889226636952*^9}, {3.660889259818615*^9, 
   3.660889269647498*^9}, {3.660889406135416*^9, 3.660889415496881*^9}, {
   3.660889486908524*^9, 3.660889487819126*^9}, {3.6608897487336197`*^9, 
   3.660889789463763*^9}, {3.660892184209272*^9, 3.660892187134685*^9}, {
   3.660894667116169*^9, 3.660894676100037*^9}, {3.6608953984885406`*^9, 
   3.660895406081746*^9}, {3.6609025856166763`*^9, 3.660902589098558*^9}, {
   3.660903005791647*^9, 3.660903018262866*^9}, {3.6609030603474293`*^9, 
   3.6609030624674788`*^9}, 3.660903280239798*^9, {3.660904121075465*^9, 
   3.660904176958231*^9}, {3.660904491623623*^9, 3.66090449465895*^9}, {
   3.661061501547101*^9, 3.661061525259791*^9}, {3.661061604607356*^9, 
   3.661061637765761*^9}, {3.66953156253353*^9, 3.6695315648534718`*^9}, {
   3.669533823207656*^9, 3.6695338317646513`*^9}, {3.669547452438092*^9, 
   3.669547458531808*^9}, {3.6695478338894053`*^9, 3.669547835831215*^9}, {
   3.670124133084159*^9, 3.670124141332407*^9}, {3.6701246028466187`*^9, 
   3.670124607125396*^9}, {3.6701263266961813`*^9, 3.670126328729767*^9}, {
   3.670126757650237*^9, 3.6701267782360907`*^9}, {3.670126863922868*^9, 
   3.670126932883072*^9}, {3.670126967430297*^9, 3.6701270398423357`*^9}, {
   3.670234082014619*^9, 3.670234089877426*^9}, {3.670838522567213*^9, 
   3.670838524201981*^9}, {3.670838574168779*^9, 3.670838592862022*^9}, {
   3.670838922993967*^9, 3.670839050858601*^9}, {3.670840203385911*^9, 
   3.670840203543363*^9}, {3.6709249202535553`*^9, 3.67092494960627*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.6709249584189053`*^9}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.6709249584221573`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "u", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"Cos", "[", "v", "]"}]}]}], ",", 
   FractionBox[
    RowBox[{"Sin", "[", "v", "]"}], "2"], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", "u", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", "v", "]"}], " ", 
     RowBox[{"Sin", "[", "u", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.6709249584234953`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.6709249585083857`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"]], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.6709249585106087`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.6709249585120564`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "\[LessEqual]", "u"}], "&&", 
  RowBox[{"u", "<", 
   RowBox[{"2", " ", "\[Pi]"}]}], "&&", 
  RowBox[{"0", "\[LessEqual]", "v"}], "&&", 
  RowBox[{"v", "<", 
   RowBox[{"2", " ", "\[Pi]"}]}]}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.670924958513505*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "v", "]"}], "\[Rule]", 
    RowBox[{"2", " ", "y"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "v", "]"}], "\[Rule]", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], "\[Rule]", 
    FractionBox["x", 
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", "u", "]"}], "\[Rule]", 
    FractionBox["z", 
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.670924958515834*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "v", "]"}], "\[Rule]", 
    RowBox[{"2", " ", "y"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "v", "]"}], "\[Rule]", 
    RowBox[{"-", 
     SqrtBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], "\[Rule]", 
    FractionBox["x", 
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", "u", "]"}], "\[Rule]", 
    FractionBox["z", 
     RowBox[{"2", "+", 
      FractionBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.670924958517757*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
3sy72nz0bkTmr7Wcv9w27vl7zR4RnxO5skBVIbfe8XF9+z6Gurf1DGLuvP/C
UkZ3f7dmdyDzdZDzAOlt7seLeXLZYtGqpAsJwh4Rd+4xdJoYV9axa+Gwlbcz
GPL55nIx+mS1ZPbB2ihlorA7pG/pODFQky/Trq6P3+NYRd+l9Ipuw5P+Mm+r
4w2mCHmRftvYoVyjz9fl7NChl9y9kb76iGkJfe8Y6tyeN3DU7Ajpk8NvX9L0
OOe6jYf/41iO9KOLH3w9TPDPTO1VRhsfpG+6N81I2BOb3c1h26rbGYr+Qp+g
Kpr8sWAXSO89xuxul0pXzR1fr7IUetMjfT/HGz4rhN4o/8aSP6f0XSU9dyfy
J0r5+Vwiz3kpD39B9LNV6kdvR/o7SvaX3yX6byX1r984/PWwXPSptybj6yHH
l4eS8eolx4vPJnb1n7Qr3ozYQ7S0B07t6qzZ+DnCrrw5scMmY7LtkMedaXXt
UKu/rFr2fA5kDpuutti7/As7PkyOP9IX6vxM2MdFi9PTbcPv5UtT9I+jHk89
kpDAXpxqVZU/iFK41Yyvb+68z2Tm9423D6ju6o34oovBweI/LPPQhFf6B1Ec
8WtWQ2w0+uCnp1fez5em8Cqe00+4C/5lh/hGCTkV/kFfbsMuISfFX0icfyd8
Kks+3MAlZ7tXZbt8dmLJnbnIya+Rfs2U/eLuRA/vpR441dvCkKbCDi56xxA9
e0s98zmFT5j29c1gPrUXrdfoT6Qt2nPCKoC9PCf1hPRpXzoKPZ63mL/qv9iC
A5IV/ZmJzt8OPI1noSZzVpzwiVD4TzfXaXW80tilkf3skwMOeiO+/t2vkBmb
Mlndi2v+nvSJ4IhPcptZSKN/3M12YaEByQqfaHqsnca/+qcFQ4ScCm/R5l5/
TyEnxRtInD8lfCZIPrwBaXeibJcXd6y5JBc5uS/pV6zsF7cmergm9cCp3vqe
iNH05j2T6PmN1DOv3i+89q5KaaxTXNNb7mK+jKh3+vfkSD9W743UE9Kb7lkh
9HjaYmvkmc0/aiYq+lfT4t/1Lx7Hhjz17N175A+F3wquPLRaqxQ2q+/dod07
7fdGfEXXy5Vfe6exq1kJx/uM/MERH/0zK6uqoLcbuMUwvGaiwhfVnGKu8a/W
sMhAIafCJ229nDVByEnx0RLnCwmfhZIPv0HaHSXb5fYfpg7PRU6uI/3Sy37x
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
yfFtH/XKVHgz4+BnD3tlsoQbV6zF5+o+SFO/p0XGHo5l419ElRLtqDxV/0/7
VtU0iuUdR291FHKp/FKj9o0aas+rooc51BKfI3508rkk0U/97OBNiaMFP+S/
13z9Bq09k0SrSVr7iJ+uGuCmyedxvnRzTV7EN97q33686M+s947DSpY3VPmN
QKffN1oOjGYLL907tLF+usqHzPdocH+TeG4QV+hqM/E54qsy1nhq35/16/MW
8VflbeLfjbjWfGA03zX00iTxvX/5H2OzLMGXm13zvN5CfI74lJB287Tvt7XO
eL2g7V+VN6hZ3+HmhU8/mUsz77lfQlL+vR/m64YVX8VzLRPn1LPic8T7WWdO
Xii+bzBzcEvxV+Uxgubs/X7u008+yHO/qfiewmvMPPNE8OW6546vzovP1Xtm
bI4baN8v7vw8eUrUv/eE2F5Mn1+xVjjrtL5h24kTkhTuXnZtvUni+a7/wIxy
4nPEgxrYLJ0qvl9vYGB/8VflARxfbH5ZvlY4N+5k4if4KLzdJJcN2nNT7uNW
QXyu3ruyYLip9v0OI6c0uJb4730aj7quWu50NpRV2zyh5NVKCQqf71cxQnv2
T33Qc6/4HPGmh0wPa9+3+NzeXvxVcXTCjHPG+86G8lulW7iL7yn8d/+eo7Tn
5A/7uPa5iosr9R+ofb9++/ytLoX/e+9Em1UzPI+lhbCsJg3TAzfFK/x5gYb6
IPHc456h21HxOeL9ejc9rH1/Q/dFS8VfFYcmGi7t65kWwteUbbhKfE/hnWo1
NNeej+jiUrTPEbe3uDtc+/6yDt9dBzVJVvHRrKPNas2aEMKOTSw8xz417t97
GxZfbbJYPN/ZNLiJjfgccccLrgUGi+/P+1YkVPBRcVz/cMt3go4/sX0TLfj8
iwetY85qz6GWZstmis8RL1lssY/2/XqgH4wvqH4Qp/pBvC/RD+Kon9WgH8TN
iH4QR/2g/aB/Tu0HcWo/iFP7QZzaD+LUflRcAPZTFOYX+rfzYH6ZwfxC3A3m
1x2YX8p/hvlVF+YX4rtgfhnB/EK8LcyvJjC/1L1+mF+tYP1B/7A6rD8HYf1B
vDGsPzVg/UG8N6w/f2zk+qP8VVh/BsD6g3g1WH8sYP1BPAHWHxtYn9G/+grr
sx2sz4jPg/W5HqzPiK+E9dkG1mfEf8H6vBPWZ8Q7wvrcAdZnxCfD+hwJ+6zy
Z2Cf3QX7LOJ3YZ9dD/ss4mVgnx0H+yDi/WAf7AD7IOINYB9cCfsg4h6wD56A
fQ39gTFyX2PVYB9E/JDcB9l22DcR3yX3TV0i7NeIN5D7NT8P+zviTeX+zuuA
P4D4QOkP6Lc7FdzDWhnpOja3aBK68gnzym9dsli9WBZfrtSI/1Iy2KpXmyb1
q/2Q9Zv2y3GteH6Sr2XVCpNiWdWlV+LOXfdhyzZZl+0z3EjnVeDJc8FH3wn4
TC87PrpwvVg+vd+xBuJ7fA3w+d1yLBd8+Y5BY7tXmhTLawEfV1+zz72HG+n3
5+v97JCFoW6rs8fM/l8+sns2k7Mm7I5mbby23Dzsns6c+vT84erux5x7a3/T
mfv9quVPlIhhlxak7L825AMrvvzPafcthrqre0oZuFgY6pFPm7UGKeN2R3PL
SoXWiu9xZ+CzNPxJNe35XsXB9U6ViOGXgc/qpD4LBR/9z/5xnh1c/rKgd339
PvBvLH5P3OW3zSNZl9O1h/1clcqqtj9v0LfNN3bg40vrSPHcLWinz80Pkcxn
77tCs3d9Zc3N135lrQx0oz5sLNjR5S9HPp/NI/18m0fypjX2FRPf48jHatq4
i4Ivv9Zu/KnbHyL5PeBjeyrrtOCj73jPLHrZ0Ew2KvbVgC7bA9mC7bvGDVsc
zjzeDlu/NCuJNTn4dfXKF4HswfG7K5aJ56/dVib+qRvBMsLNHlRNCGTrKhbZ
N6zeH3ay1p7uy4dmcuTzoMLfS0MWh/O4onENxfd4Y+ATNs/0o+DLB/9adOZv
3QiOfIrVqmkm+HDvoc37rOudxor5NYsvXekTM8g8/cvvdyhLmrftdz3XBPbV
OKD5+IqfWaB7Nd/64rm6efTS05vCWJmSzaa9N/zCOtqHX2ryJ43tGVr8gODD
kU+NCl/tPvwO5UPMu24U3+PI57zfdHPtOeJMX8Ozm8J4KeDjWjtgkuDDrYzT
786omMJC6457wZJesZue950NTL8zJ4fEpDl+Yv+acOXPjAJvmOPRWXyueJ77
9ePydau/s5C7MeuWrn/LJvv7zu+7JYVdzDIsYF0xhSOfMntTOv2t9Z2bJXRb
Ib7Hkc+PLlU7as8F43p+W7/6O0c+b59ZNxB8eKbVsKN9miezywl77na76sIe
9kmfETIphKXEjlzuaBjPRl98EHtFxBG1A2d22i2ev5QJvLtzYQhb12uf/0fb
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
1s9Mcs8rBNbPfORe2CBYPx3IPbL2sH42IvfOusH6WRH2I/o+gUbkfhbcn9Xt
IPe5zGA/ove/EmA/KkTui62B/WgauV+2EvajaeQ+Wn7Yj4aAf0Lv6c8l97bg
/rKuHbnn1ZD4G4gPAn/DitwjqwD7/jpy7+wF7O9h5J5aFdjfO23ynVf8srG6
n1WiXbNfe7Zctmjx3e9OmfdGOrwPdczq9KETNy5ZHDgZavHZ6a+6f/TwVfyi
z7Nj2cSnBSp922SoQ7xndJsL6asvWqTO6Bvb40uSop+df4DLOpsMVn+izcG6
bQMVvrvOyD+jKhjqjraIdWvYNpAjHqpPCdTwggsu3+n5JUnhi/p5pawVfObX
sL0k5FH4mi7mBwOEPIOeZ8ujR3z7nf8WzRhxxdyO0K+Q9Lww4W8n+fO7RJ7v
Uh59xoSc8u+R8uujSX/tZX/5LqK3n1JvPCOoWFvtfeR4Hu/+7oUnfB5EsUNZ
bXtr7yNHfFba4yf386WxOp8tL+xc/kXhO03dCri0+ssyPcPG7F7+Rf2eV+Bq
wzfae8BX9XLOr70vXP1+1v4drTQ+n344H9beL474qaO9krT3j4+6JN9Hjnjp
4MWm9Y5fMv9M6I9Jer6a8E+R/HnZYznl+Sbl4Zmfcsq/S8rPd5H+LpT95QlE
P6FSP//z+1b94P3b68+NaH64dDrDc27Nf8d/OVH1J2u9IPN4WpHfCs9/6mOq
sXsyK1Wn/ZMUnwCFv55UqMLGdpns+Y/4Shk+Aeq83KOQbT82CDx/5sjB6UV+
K9zoSKatxmdZ1+Adol2FGx8ZOOy4aLeAW1+nbnGZCr/sH3n0adQF8+WE/q97
Nj0vQPgbSP48KHd5eHTtnPK/kfLzhqS/JWR/+Qqin/5SP/ztoWw5Ff7R8o/3
CfMz3sc33RmYdTtFnaey7vSoSsUvP9jX9lO3X58dp3D7LRe67tifyJ5UM1m/
1+6jwtPLPLO6fz6NFZq0d4uz3Ud17svB93gHDT82fXH9G7PjFN7Oy/jxdsFn
29IXx0S7Cv9ycsy18qJd7+a3xvqPTFe4WWBEo9AS58y3E/oASc+PE/5tJH9e
lcizU8rDTxD5M6X8/D3p7yrZX+5O9LNe6oe/a5Itp8KnJ/f/3f/5Se/zzUsV
NGry71yNU773VQLGhLGuDf5Y+l2IVfiKk9YlFnVOYI2PXZk3J/yDwkPO7twa
/yeF2Zbu39U2/IM6vzSHDZ2s4TqHWzM+XohV+A3D4IMLBZ+C9+xHinYVfjn8
18uPot3PVwcXDjuUqnDHSylrm9c9Y16I0F+Q9Lwr4X9d8udriTyzpTy8GJE/
VMrPW5L+rpP95SeJfi5K/XDTK9lyKjy6w5Hxixqe8EYcz130TSqv4RZvQf9Y
p16UeDNe6N9iLdg/1vuawfrgC/aP+PfzYzT7t2gF8wjxfLBumMC6gfhLWDee
wjxF/CGsG/lgXiNuCOvGUlgHEDeCdSM/rBuIX4R1Yxmhz4J1Iz/h/9ddrhuB
RJ4HsG5E1c4pP6x7vAHpbzFYN5YTvfWDdSM15/rM9bB/Hci5nnMb2L9Mc+5f
fBvsX2k59y/+FfavFTn3Fw77C/PPuR/xE7B/jci5f/GSsH8FEPqjsH+tJPyT
YP8qlXP/4l9g/0rPuX/xHbB/7ST9tYP9K47oJxj2LyfwB7BudQ/8qGTwHxCf
Cf5SHfCXEN8F/pI7+CeIh4C/lB/8GcTBn2Fzwf9BfCX4SwPAX0J8G/hL8wj9
UvCXChD+tuAv3cpdHn3qhJzyO4K/FEn6uxD8pZ1EPz/AXxoPfibiNWY5a36m
94HutcrdTTbQYd1nhWnHI1dHxLGjbwqV2rIsRdWDJrmfGZdu+4d1nVBxUfd7
QQp3e/hunNlYI92fTUmHe9wLUvWp/Q96dtbwQu2vxwo+Crf2CjmTJvgcHew5
RLSrR7xl5r0jXqJdy7Bs/1nhcePbdfz0wMvck9A3l/S8COE/XfLnRTfnlMdZ
yqNvTOR3l/LrnUh/Z8r+8r1EPw5SP7w5+PmI/2la1kX4+d7N3Lt3ve1tqPL/
ZsFnGw6vEM9+nnDZONwhlSG++3NH99Ivslgnh9SC/puCFd6t4ZKhR1sb6/Z4
9u3zaVMwR7xF5yWtNLzIljVzRzikKtxH3y+8lOBT7avLWtGuqss4/bWrPky0
a7MlO05R+KuGyc5eN6+aVyf0eyU9L0r4c8mfHyHyNJfy6GsT+btL+fVfSH8P
y/7yBkQ/A6R+uBnEU4jv+uaixVPePkc2HfmPpTOMs8YdOfLBdOIfVt0ycaPl
6zCFT7hdLjkr2ki3ffCbzENWnzjiXb71bOk701h36NC6ylOeJyt8jOnvc5VK
GujazPzbPNrcUI/4Ar/8ZQOLJ7D9Rcu/q37aWOGN7g52GHfGh7W9cGHVWpau
+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
9kJ9GfGWUO/W/ywm5PXwRvzbZtkfrFMjfh/q4N/jTDy1OjbidbjtFI0/1rsR
d4b6uNHA+920ujTijQ/sTNf6ORPq5oi/hrr5/dapXbX6NuJTKps2DBD9rEH4
Yz2d0o+T9LwYkV8Pdfb8RJ5GUh7uQfQD5wH0P0h/a8v+6usQ/VtCXb5Nw0Fx
uehT/5WMryvU6/uS8aopx0vfiNjPQKjjexN78JD2wHcQu4qSdsUd7v3XVMvT
q7pMFavLPe8FsYxOq4ZqeXrEn83YOX7rshR2MbygqZaPR9zHb9p8Lb/s6rBV
rB9HvBHXh8r15aXJqlpavlnlw5+HtNbo2zTumU/LWyNukD9otZbXdntYvH/2
eRDA9yVs3GIp5KH4LonzdoRPVr5sPvw1addZtqtP3MNdcpFT70n69UD2Sx9H
9BAg9cB3EL05Sb3xI8V7vdHOMWHe8rXTRY/GbQMZzZPvgnz4pTkzjmnnm5De
Ozmsdq8vSew0yYs+hnz48CWTz/rPjlX0nf2vRmrnjV7mkScP71VB7M/u3kj/
7pncvzvfN841T55ZqMLmT7Nj/51jt2q0ROOfV578YkPDPtq5J6SvFrtqeE8h
f1558jYLTsRq56dUf580Plxf6CevPDml95L0eebJLxN5qkp58s6TF87Z3++y
v3nmyWMN2l/MRZ/6vPLkncl4dZPjlWee/Dixh5fSHvLMk7sRezN2zra3PPPh
M4/0f6Wd68T8ZOEer+9l+gSw6lVMmmrnOhGP9d5wPL3IbzbcPsvhWNWfCn+x
td5d7Txlk3sNRZxxyBvxjq4yDun/zL2idr5S5YFTD03Q6D3qRnpp5zERr9ah
UaZ2XnOP6bMs7Vwn4rU2lp2fJuSheCWJc0/Cp6rkwweRdq/Ldvkqr3z6XOTk
XUi/3sh+8XJED+lSD9ya6K2N1Bu/3mSfqRY3q3Pdf0cUOyDixm+Pm27R4mbE
z64wXCTiVXbhq6exFjerc9e27321+LDQrB3x/Z/v90bcWMbP7JFdSZsKIl5E
XPffg2Ua/XS3gHxafIn49YExAVr8mWF3Y0B2XAv4Nv6mgJOQh+LrJc6tCZ9r
kg9/mnu73PtB54Rc5OQupF9bZb+4H9HDNakHfpXobbLUG/faeLWflq/CvJ/l
4wNn5od/YHebVJus5asQb6M7kPrxQixb+vFPPS1fhfi4LadWa/mauWNixi1q
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
SvxMsENWh/ilGAcZED/2EMRB/wcrDZfu
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1nHfgV9Mbxz/33HFuklDIlplKS/ZK0TBCRkZIZK+QEaVhlyQRmcnOqISE
kqhkZGZHEiEZkezf+9X7/v443/N8zz333Pu595znPM/7eT+3ca9zup0darXa
pUWtlqp+Rn92ymu1LyVPTWq1u1QGSH5d9QSVqyVPU32vykDJz6u+R+VyyXNV
P65yleTeGu8njXOX5FuyWu1plft07ES1L1P7HWrvJfkHybfTX8evVLlUfU5V
fbVKf8ZS/YDKrZKnqNyh0l/9T9a5v+rceyWfJPlHyXdKvlV9p3CO+o1RPVXl
IcmzVB5RuUJ9Ope12pvqf7Dkrmo7QeV4yV9pnFdjrXac/t9Zz2GYygVq76L/
j1Q5WvKBOneJSheN+476v65xuqp9B/W9VuUsyZ10/A21HyR5js57VOVKyb/p
nLpq/5XnIHmIysWS6+oFrFD9mvq01RjXqJwpebHGn6v76cm1JS+Jfh9fa4yf
9f9p9JH8k+RTJd/Oe1A5W3J9te2h/pMkryF5d8kTJa8juZPkZyWvKXkvyU9K
Xkvy3pInS15XcmfJUyWvJ7mL5OckN5K8v+TnJW8i+VDJL0neSPIhkl+U/Kd+
03q6p5W6j2WSU+5P8sbq0019ZqhPUNvmKv+pfVO1H672mWqvJ/lrnTOB96hn
0j3x7/pRbTm/mf/VZ4Xk+9Q+lueq0kfy3aqHqJwr+U7Vg1TO4Z2q74865xTJ
iyQvk3yy5Md0/EaViyQ/ofomlYslX8E8VblZ/1/L3FEZI/kUnfebzh+nPhep
bbTKtWr/VOUNlVvU3pfzmLv6/xLVt6kMlTxe5QaVC9XnYdXXq/SVfJt+41GJ
3+PJGnsv9T9K8pu61iKVAySPVJ9D1KeX5I/V9pKe1aH6v5XmyBUqJ6q9teor
VU6S/LT6vMW7l/yh6hnq34370ziHJ/7t26nvIJUekocGz2/m9svqP1n9O/As
1d5OdTe1f6r2l6PP78G70312UPtLan9S7e3V3lTjDVA5jGeoc/dW26GSB0ve
S/Ihktvo+FUqvSWfqHF2zDz+Uo3ztsY5O/E1zqnuc5DO3TPxOj209LvkPZ6n
tuHV82Qtf63SRmPdELyej6/W4GKVVmpvqWsOUTlO7Teqz8GsefSPxmub+d4+
0T3M1D0cpmMt1HewyrFqH6H+B6mtZ83r/Xn1OVD/vy35OckHSP5DY6yjsX6X
fIzqzfR/e/WfpT5Pqc8+iZ/hezp2hNp30thDVc6v3uk7uZ/bPbrWqdV85h57
V/fZVb/jW5UDNO73vF+NeWbie35X5x6uPt9Jnqf209W+vca+WuUMtX+p9jlq
PwZdrvFPqtYF9/+azj2w5t93YvUbd9R516mcxzpS/16VPmmmtstTX+t0nXdI
5nu7W31OrtYd83aqrrUf70B9mqnPfmrfRf93Vtlf8nXq3ynxPG+u8QamfibH
qf+26t9F8r68a5VtWGPq3xH9q/bZGv9pjb9v4jVxSrUumOdv555vB+m871QO
0rm91bZH5nP3U9s3Krvp/2uCx+iu9tGSj0g8r1bTODto/Mck/61z30u8p/wj
+f3Ee9lInf945j3vBtXjM+vkYaofzrw/1dEYf2isIeofJa+UPFjyXTr+fOb9
YKzqFzLvl7n6/K4+g9SnseTVVUZK7qPj12fWa6naVhTecxtI/k/ydbx33dva
+n+05E1Vr6Zyo+SNVZcqIyRvqLpQuUFyN413TuZ51l/17Zl102DVd2fWg7M0
5j56Vp3Uf7rk9pLbST5Mxy/IPMeeUvsDPC+1T0YfS27LO5I8h/0D/SB5emFd
MVPyDMn7SH5R8vPsN5KXSP5L8jXsQbrHfyRfK3kgzzKzjt5Sbcfo2Ktq/11t
a+ic39Q+Q/ULhddalLylSqb3+bzqp9jzWEfqf2bmObqf6lMyz+ntNF6mPg+y
v+j/Bfwm5n/0PGAOtJScS35I8rF6BoXkhyXvrPa6kh+XvCvvS/ITkneL3sPY
v5Lg/WqW5F/QmTp2j+Sajn+UuM9StffQuGNoV/9lan9Z4nLdY6ljy/X/z5IL
yb9I/jfxXvqK+hyo9tMyr+fvdXxdjX+b2o/HhuI9YTsl1hOs5YsS2zXohEsS
64PT0dWJ3yc6p19iWwPb45rE+hgddR3rO7Et9Df7oMqlks9gLWW2OXqo7pdZ
N3/D/arPJerzreSGurdbJZ+g4wNULmRc1SMy799nq74u8579J3adSj/1P1z1
wuj5+ZzGmaT/d1P7s5Ifl7wL70LHtuV9ssZ5J7n7dOK95Z6fHXnPuefnvpIf
kLy95A+ke/7E6NX5XXjnat+VPUXyo7nHf1/HV6r8I3kvvaPvVOtQbW/JP/h1
1rbU+YXKRpI7qP0n5qPKGzqvvTqvkLyBjv+uej3uQX2Wqy7Rw+rTQX3+kLw5
61xlQ8lbo0dUNmYsXaSVBnyEaSL548R2yJHYj5nf058a453EtvRfkt9NbGOX
6t9a546XXEfy9pIf5SdX8xD7mXn9Sea53URtq6tsIvlzjfNtYR27j+r79X8b
yUfwDjPPraUqn6ncr/aUcRLbZpn6bqES9Funqp5Q+NlO0e/dWf8vkvye5H0k
/y35U9VfF96750teUFhvvy/5s8K6eldds3vmPbql6n0z78Wfqc83hfevBZKX
FN6bOrHuM8/p9qz7zPN+jvq8WniveVXya4X3qRbYNZn39Llqf6PwnvWB5M8L
71n7sOYyr6UP1b6wsO30nH7LLtwH+52OH57ZTpvHPlLYxmik/39VvS6Fta16
HZWGkpdRs3/peQX9X481Lvk/1aurvKPxVzBf0Z+ql6h8z1pQ/RVF8vOqv+aY
5LfYswrbV+yNHxTeH/F73i1sUz2J/1R4Lfyja9XVdUv2Vsm56jXUPkl97in8
3s+TfFlm2xX9MiKx/XxfsE2LfthK179EpaPkh3XeWM237XXsUvXZMfEzH6/2
cWpvq/+3Vt9+qfea7hp/nczz5DL13ynxe9kfO7PS58+yTnXu7jq2jc67NLUN
g937qNp3VftjzFXJO0geI3mKSgveEfpB7XuovYnOuyy177al6otV9mVN6R7W
y6xD+gWPwV6GfnhA526l/49QewPVjWt+7vUlr6l6Q41xjkrLmt/NmmpfGz2m
/mtJ3kzyxjreR6U1+4XGvFJlC8kH4KekltFRt+pa6+mcg9T+r9qb8hwkL5W8
OWtQcoPMOmp39b9KZUvmDLo3tbwH+6rKVtX6vUVjroOe0vFzVVqpvX+wfcY8
v1By68R7dAf1vyFaFzCf6qleS/W2Oq9/at92C9UXpbYN7lL/m9V/O/XbPfgc
+rdU+6dSdL3V79ua10da6YGpqeW6+jNNJavW0QuVfL7GaZHYTlhHbaelfobr
qj499fNngL/VbzH6Ifh98C4e1HXv1v200fnd9EzKzM/8DrXfpPbmvD+d21dl
z5rnyY1qb5p4vj0Sva8conNTnduc9yh5jcz7CM/n1sL7zsFqT9TerOY96CGd
uw06h2de+Ny+urdWiW2hw9R/9czr7lDJq2VeXxeoT8vE9swaqpupbEr/4P+R
N9f9Xqiyl+RWGvvs6D1pV+zNwnNjb9WjCt/Piep7ajSe85beQwvJH+t670ne
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtnAf8V9Mfxu/93vs955KZka2sssreaWgRRXZFQxPJ3pQUIbKKEiIlEclI
yYqo7CQrSRkNqYQIf//n7bmvV+f1O597zh3fe885n+fzfJ5Tna59211QSZLk
4TxJ9C9pUSRJf5U9syRpK3tiNUkelF1R4xGyh4YkGR2T5FyddIjse2WPVPu3
6r+37GGyH5D9P9m7p0nSVPXrVXaV3Vjtw9U+SvYS2fvIfqrq/v/KPlz2aapf
QdHx62XX0vHlKlvoWqfpns/r+GNq31TPc4za5+l6r+p5BqjtJNnjZD8ou5fs
g2V/Kvs12TfKbif7adljZZ9f8f1e1/V20rV2VjlR9iS1P672PhX/3ntkP1b2
P0z2ZPV/VPevof5NZM/Xs81T+Vv1/6l8ov6vqP8NFV9vuPovV98Vev6fdOzp
6PexvY411LEXZPeTvYfsZrJv1/kP6Vjv8vkny35CNh/pSNmzda9NVH5Tfa3K
etU/U9lO9do6f7D636vrfcj717Ggc1eovKLzh8reWsd/VNlcfU/lGdV3oMr+
OtaN76nnXaJn+V7tP6j9Dx3/VGVbte2kY5uV9j+yj1P75uX9E7UdL/tm3f8e
XW+VjtXSsW9lv6P736a29uq2nY7/pVJHbWfp2E1qv1v939Ox3dT+o+z31P9O
tXWWvamOz1VZr3orHdtK9e95Bzr/FNm3qP8wnf8Lz6hjrVUfoFJf9lk65za1
D5f9q+zt1f6N7Ld1/Vt17plqXyh7puxbZJ8h+wHZD6v/Zeq/l/o/yHiXfTnj
VfZ9wfMh1Tuqy/eT/aTO76vzj9L5z+r9FWrbIPd4f1r2Q+qf5/5+x6t+o0oD
Xe9s2dvq758qO+taHXWN38vfu43adtCx33Tt69R/os6fKnsbta1T2VH1Dup/
tOoj1TZe9rOyl+l5PtA5d6veVddYKvt92XfJ7iJ7RPDzZDpnT76x7HfVPlTt
ndT+iq73MmNE9WUqL+v5J6j/Nup/nOyP1Pa+yu+q/8F4V/1jfoPqf6k0Un2s
+k7WtV/UNYfo/Pdlz5P9mex/dL/vdb8pfDv1f0jtico/av9Lxxrq/PvVf5zs
SbJ/Vv+56j9c9R7q+qD6/k/tf6l9vY6Nkv237PWy/5R9up71SpWrdHwg65rO
f4T1RNfdV32+ZC1RiapXVaap/pLKEvX9QaXQvX5SeVXXupPfpPO/i/4tg2Vv
qPpKlddk3yX7DO6lcrXuN0j2d7rWVOaX6hszXnT8Jz3fStVX6pyFattSZUPZ
hcoDal+n9t9U/1XtI2X/JvtX2WsZD7r/17rfM6r31zV/kT1f9njZV8neQNea
rrJU9aN0bCO1/azyuup369iZPJvKtbrubbL31N+NGaNq311lb9U3U9lQ9boq
HeiLD9Cxe3gf5e/5TvUj1L6PjtdU2Uj1PVVGqL5Wz7tWz/uL7H/1fD/o/i+p
fqvOuV/ta9T+i9rXcA/upRJU31XlT/VfpP6TVb9R/dfJXhj97W9gjMn+Jnps
D5B9u879UNf7VNf7XMc21LO9rrJCbUfL/lX9P1P/J1S/WsdOZe5SdN51sn9T
++dqn6D2a2SfwlynqP1a2dP09wnZW+sex8p+Q/0nq//l6t9M9pzo+dtS7Z31
DNOj/WUD2SfIfl/9pzJn1b8164+u967aPlHbfB37XM9aUyWXXVE5SvXhan8s
9Tc+UvYtskemfsa7dP7XshfLXsIzFKW/UL+Wuv7dav9G7UvU/p3aV+n+n+j+
96neU+2Hq99AtQ9LPWYOk32V7Ntkj+Eb6fzZsufK/lT2c7LH6Pob61hTnX+Q
7J1VtsEfqRyq869Q2y3q/6jsqWobr/5b6lgr9T9E7ZepfrPaH+H59TyP6nnO
41y1H6D+O6hsLftArqn+vdT/OvUfJfsetX0r+zvZ3+OD1X6T7PtTf9Nhal8q
e7nsFbJ/KMd/TV17Mx17RfebpPtdWvHzr5H9qewRsnvLbqy+j+v8F1KvQe31
7NeoXKfrDlH7wfpbR2U7nlflNZ3/rM6/rGK8sbQcb1uoXlPXmB3tb5rpmmfL
vkPnzlP9S9W/1jlvggXUfoSOnaJjH0X729Nkny97lq7/oo5dXfH7u1Pnf662
r/FVOnaQ7tVd9jWsFbJnq/8U9b+m4vE5XfYzsi+pGI8cqP7nqP+V6j9Sx95V
+0tqv7bi9Xu17Hmy75fdS/bHqg/S85yhcy7QOUN1//mqf6X6QjCe7Cm65mL1
PUx2x6qx1/6p58TXut5busZg1l7mi/oeqT6NKv8t68nhuvb5KkdV/c5Yf1uo
3lbtGzNn1daX+aRj28verxwfC6mrz/7l+PuGsSO7XrlefS57N9kv6npdVRqo
XhNMV7X/Ass2lD1T9YY61kT1wBqpe12g0ljHtpLdS89+TuZ1jvXt3OBj1DdT
+6scr/paXLOxzr1Epa2O7SW7j/qfH732MAafU/9O4Bv6cz21fVV4nWZ9pu+C
wusW5xyheh+Vo3W9LXX+HuX6/Jnqu7CG6fpDdM7ZrLc6dpXs26KxUz3Z58se
EI2Fdpb9KGNF578ge5K+0WVqvyUaK+yh9itk3xqNNeomXqvX6P5NMq/Z+OZ7
M88T5scF6n9jNFasDV7P7UumVoxHGuncC1WO5bsxRqr2p0DCI1mzwXe8Y9Ub
6NhA8KnsbrL3k91f9p2yu8quL/t5ndiZWEL2Jip7lf7mC94N71T3Wph7XWU9
bSL7UpV2svdXnxd0bhd8Pd9PZbSuf5+u3131AxKvDeD99lWvEeACYpOLK8YH
D+bGDs/Jfkr2geV6sIi1kDWhnA8VxnbFOLGOyoUV40Xe/+sqc1S/KXEcxFjp
VHE8xLdbXBgH8w3vUd9nVaarrV9inLmLykWVEm9G40l+H7/hLtWfVpmWOj4C
17ZRW/uK8e1otb2iMis1HgEXn6D2MyvGxx/IbiK7hex1am9aNZ7bQPWWOnaR
7ve1nm+Ojm2dGOeeqD6dK8a7vJ/pKm+nxlfNqo5/aqjemvGq878pHBcQDxxT
NT7cUO3Hyr5S7QsLxxHED3foWk+qvJTaP4NLT9I5XSrGp4yVi8C7mcfMlfqe
1+pYm4pjHvxpc/U/Aewj+9Lge3BtMPQmJb6aA1bSscuDn5FnI6aZDA4Hf8uu
cEztX+r5/uA9Jo63Gukax6hNpyW7l/hlvuq1dey84DnO3AbzbVvi0Q9V30LH
nuU7q+yg+r/6PW9mXgsby/5ZfXbGVzP3dM4Mtb+TeS1oqvY1ar9M7bcX/k58
n+1K/PuR2raSvWOJnz/Wn1rYYC/1f5FxqOtdrOe7PDp2qsX8ZW6qfyr77cR4
tJXsk5hvzD+d10/2dHyfzp8s+3rWVNmvyL5G/euqXM/aJfsq1XdXuRJ/Lnsf
3a921fOG+XJ1ZqxyFb4ste/6Ts93VtU+7EriPjAF81PtQzJjFLAJ/mhA5lju
dtnHp14f9mXtlf2Vnvda2fVU+sk+ijGUmbvoX3F8TazXUL+he9Ux3w2crzIE
f8icY60BYzBWZd+SGZOARcB3xIY/6nm7VR0j9lfbPio3Vxyv438aqK0+vrBc
f+rL3kf2gsRcwPc6v3PVnMDgzD4dXw5e6KNn60uMyLPJPhc/DOciu5/s3fU+
N696HWT9A9ut0PXOqxrjEbstld2z6hiO2HmZ7F5Vx9DEfstl9646Bhyoe++n
co/q7VLHiifpnudWHTPepLYDVIZVjFcGZeYG7pV9suxa4OvC84r5hL/breq5
wJwAa3XW9fpUjbluzBzr3lExPma+7aq2nWR/qv4Xqu+Fsh+mb2ps8hOYoWqM
cltmzAnWBC8xn3YBK8iep/NvzYw5wZrnqv3mzBgI7NOB8a/rX6T+o2UPYs1U
214qg2Q3Tc0d/aD7damaQ4IrOkjndK2aMyL2ujMzTgefE5usKhynEqNM0t9a
6ru56h8kXs+INZ6S/VDq9f1K2U/LfjT1+g23NRHfBObX+VuBqfhWiWPLX8CT
mWPMn8r14ZjMMeknYGtioIoxZs8Sv+CX8Ee35Y5lnlR9VOrYaXVhnoAYCv9A
rPq86k9z/9zYd5rsl1PHRj8XjkOIP/rqew+M5t7qgKnUdrHK8Tpn18Sx1srC
OB18fqTqF6m0VvsuiWPV2zPHIcQf72bGXs1U/5X4Wu0P4QtU3mdM6HkGq/2j
ijHoLNk3yn6n4hhlovpVZWey38H/6fwHdKylytuMf/UfRExTMecwR/ZA2bMq
jsFukH2p7MfxvbK31u/7Vcdq6FjUsWtVv1j1saoPZX2QfYnscfheOAxiH9bb
ijH6G7JvkD2D38Z8kn2T7DkVx6g76vr/5F63Wa9fzR1bv6H6bLU/rOdurTKX
8YN/UPsAtb/JeJCd6V2uLRynEZ+Nxq+qfKL6R8RY+HeVebI/lv206luAIXkX
ej87Ee8W9hP4h5MK433mePfEscMS2WdWHUPwrb8tzLvyzTkOl1U/dTu4Ce6z
QWr8NDwaf61kHKeuDy/xFpilo+p1CnMZ+OAerI3E1qk5QfwAseMhqf1Bh6pj
z/1Sx1ysa/vLbpN6fWNdO1B229Tr25fR8f0FudfPxdF8TP/c34tv3YU5mfqb
8y07MQZSf9NzGMeym4BnZP8YzZcMyT1/vo3mk67LPR5YRw8GE6VeT7+I5g/O
y71efxXNX1+Uez3Db9RTvUVq/4Ef2kt2y9T+iHWmjuzGqdebjoX5Psb8yMS/
hd/EfGXe8iw8E/gUnLp/NCYGCz+p/gPgAqLxP3HAJbIXRK8/rENbR88Z5soI
YijV/1b5QPYjiZ+d38D6xDrFXOjInEg9Jw5UW7Uwl/cUMVr0GGVsTpB9dtXc
yaGpY07WVbj1RqnXV/zgjrKPTu0PD9b5oTCXM1Hnd6qaazw8NYfCt+CbEG8Q
dxB73R6Np8HVrDWDZJ9e8ZrD2nST7DMqXqMYG4wR1mPWZfzmUbr+aan9J76h
nexeqX1Ec43jmbnn4luyW7Cu5J5rMyteZ97JPdd4hxdEx7ev6fhy/Fl0PDdD
9srE6/jL6j8z9XrOs/GMszLjO56d3/BWZjzIOj9V/d9Mvd63kv2R7Pmy3604
Tpsge0rqeO3YwvwCmOQ01mPN99ejx/LJcCK8D/h4nbMG/636zSrrZf+Ret2d
q/rnqdffmvif6N9+H5hd7R+r/TO1v4fPlD1F9hupcwpbqu/a6Hdzfxkv11D5
KfH7uD46vv8iM9/VPzpe/Coz/8q35Jt+LTuAd1S/Db656nj+HLXXLcztgnl3
Yy2En6s6vgM7nKjn6ZEaQ4CdjsN/p8ZQYKsTZHdLjbHAFUfLPj01vgCnNJZ9
Zmq8Ag46lBgkNR7qpvvXK8w1g7F3VH2wSl51vNCrfJ4Omf03/MdGKqsSf/+L
o/mGt3VstezusvcszHXPTcxPbKzyS+L2s9S+S2Eu+F3Zvcv30TEzvthJ9VtU
YtX8Qlf134N4peKYY5don8q3HE2Movr66G/3MOer/mf0WHooMXf5H4dZMW6u
r9/+cjSeBlfDdcJ5gt/AcT+ofQO+n+wTZX8lu1LY/+CH7pa9LDpeIG54UsdS
Yhbmj+53CrFRNP4EhzYlVo3G4+ByuDQ4NfA+uP9w4qJofA5OBy/xrn+Xva70
d+1VfpP9e+p3S/xBXoF3DNcG5wZ+BceC13iX6yoe/3zbvwrnFfjGjLX1hfMK
jDnmFhweeJ85Ble4NBovgZvwpXBo4GV8KtwsOT3iHeKeSXr+36PxBzikn+qL
1Ocbte2o97EoM3fSTu0bpMYh8P+zE+ORR9XeRuWLiteAxWAl9TlZ9kap8coD
Kk/gLxNzNedmzvPB2fyUeV1kfcQ/k5djXWR9JD+Hb/6zcN4BH10t8e4wXXOM
2rco+aBxsp8Hb+jv6mi8A+4hV7AqGs+Aa/Bd5KzAa/gw8OgTKi+m5tdfU/2f
aPwKjiUXSk4U/gUeBnxGLnqi+l+RGH+NgiOQfbnszdV3is55DN4k9VwhPiKP
wpypzVwonJcgH8HcYw6CNxuX4/F01lrZP5d48kzmZsXr47bq/3thnhl+ub3O
3blw7mKW7n9OOf/PyBw/b1EYP8Jbw1dvVxjvkfcl39ta529ZOJc6Xf1r8n4K
8/bw9ZtzfmGeH37/Cb6bylKwiJ7nVJ2/feHc0Zs6/yTZ28heLvt12e2in5ln
fSMxFgGTgP+JA7qV6wW/EbzcpVz/TyO+kD1ef09R+VH9f0i9NrNGMx4ZlxMy
910me6naT47+jfy2GTp/QWbu9sSK1+8mat+4MHf9vNrHqL2typcV+xB8AT6B
/px3dumfTlaflxK/63VFmTeiT/Q74t1MTRzP3ckY4VnhO+XvRqhPD7CJ7MfQ
H8juKfugxL4ZHw3fAu+Cb8ZHw6/AszyWletYxT6wVfQ34ttM0/nj1NZO5VvZ
i8CQmZ91sexvZTdU/xqFuf7J6t9I9kaFufPnSr6FsbJK9mr1P0rtG6p9gexn
1d4heswyVpnzXOvH3HkErnls9BhjbL2s9rG61kkqi2Qv5H2qff9gXwPHXaj+
ceEcCs8/g9izMMZF/7CE/HAw99FR5Ve19yBHnzrf96r6HlrYv+Pnme+7R/OJ
8Irgg+XEn6lzvODHtVXnGrnGZJ37XjC+B+eTT4WTgosip0v+FM4LroucNf5o
ddXaBO6JXuBz2Zel9sn4hy9kX6F6V9XfJfYK5oLap/Zva6rO1YKZyH/WAb+o
PkFlL9V7B8dSC8Bger7DCvcFZ+Evf6k6lwtG+131XsGx3DAde1H2E8HcVnPZ
v8nuGRy73ZtYL0LOkFwMMcwLxJbBXFazcn78DWeROr8BH42GpEnimGoSviqY
e26UOJf2TPC1iIsY3+TkmiaOudC+jA3Ov5CHQc/wGbg4Naa5Q/bQwroN9BpD
ZN9RWFeAnuB11feI5qfhqfF15xbGDvg89DHk9FrJPji1r8PnDc3NZ0xhDQ3m
8lok1qegESC3BOZHK/B8MH4Hx7+ktonB12qZWDvzSPBvIY5EfzEfHJ8aky9W
faWOXUh8xG8E2wfH6s+kzuf9wHhLHdOR711PTiF1joz87t9w/qlzipvAXQTH
gviUWrLPDI7t4JzJh33P+EkdE+JbDiycL8XHkG//Ue3DU+fUyEdHXWNs6hzq
y+q7bTR/D4+/ijU3mCu9Q793V7WdHTwW4czBR9tE8/fw+CvVv2twLoX84/Zq
6xjMFb2qMk/tC2Sfqnqf1PHbiqpz68QA5Mvx2fhqcrJwvwcVzifDAZNf30Dt
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
         "]], 
        Polygon3DBox[CompressedData["
1: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
zTJU
         "]]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
      Line3DBox[{779, 958, 1338, 959, 2156, 1340, 963, 1001, 964, 2161, 1355, 
       1004, 1005, 2164, 1362, 1032, 1033, 1369, 2275, 1052, 1053, 1376, 2277,
        1072, 1094, 1073, 1383, 2280, 1097, 1127, 1098, 1390, 1130, 1160, 
       1131, 2165, 1397, 1163, 1193, 1164, 2170, 1404, 1196, 1197, 2173, 1411,
        1224, 1225, 1418, 2291, 1244, 1245, 1425, 2292, 1264, 1286, 1265, 
       1432, 2295, 1289, 1317, 1290, 1319}], 
      Line3DBox[{780, 961, 1339, 962, 2157, 1342, 967, 1003, 968, 2162, 1356, 
       1007, 2195, 1008, 1363, 1034, 2210, 1035, 1370, 1054, 1055, 1377, 2278,
        1074, 1096, 1075, 1384, 2281, 1100, 1129, 1101, 1391, 1133, 1162, 
       1134, 2166, 1398, 1166, 1195, 1167, 2171, 1405, 1199, 1200, 1412, 1226,
        2246, 1227, 1419, 1246, 1247, 1426, 2293, 1266, 1288, 1267, 1433, 
       2296, 1292, 1318, 1293, 1321}], 
      Line3DBox[{781, 965, 1341, 966, 2158, 1344, 971, 1006, 2194, 972, 1357, 
       1010, 2197, 1011, 1364, 1036, 2211, 1037, 1371, 1056, 2221, 1057, 1378,
        1076, 1099, 1077, 1385, 2282, 1103, 1132, 1104, 1392, 1136, 1165, 
       1137, 2167, 1399, 1169, 1198, 1170, 1406, 1202, 2236, 1203, 1413, 1228,
        2247, 1229, 1420, 1248, 2257, 1249, 1427, 1268, 1291, 1269, 1434, 
       2297, 1295, 1320, 1296, 1323}], 
      Line3DBox[{782, 969, 1343, 2269, 970, 1345, 974, 1009, 2196, 975, 1358, 
       1012, 2198, 1013, 1365, 1038, 2212, 1039, 1372, 1058, 2222, 1059, 1379,
        1078, 2227, 1102, 1079, 1386, 1105, 1135, 1106, 1393, 1138, 1168, 
       1139, 1400, 1171, 1201, 2235, 1172, 1407, 1204, 2237, 1205, 1414, 1230,
        2248, 1231, 1421, 1250, 2258, 1251, 1428, 1270, 2263, 1294, 1271, 
       1435, 1297, 1322, 1298, 1324}], 
      Line3DBox[{8, 581, 1907, 23, 282, 1674, 38, 1448, 53, 1461, 68, 1475, 
       83, 1489, 359, 98, 1503, 388, 113, 417, 1795, 128, 446, 1819, 143, 
       1520, 158, 1533, 173, 1546, 188, 1560, 523, 203, 1574, 552, 218}], 
      Line3DBox[{257, 255, 1916, 590, 259, 1932, 606, 291, 1956, 620, 1957, 
       309, 634, 1974, 325, 648, 1988, 341, 662, 2002, 368, 676, 397, 2016, 
       690, 426, 2030, 704, 455, 2044, 718, 473, 732, 2058, 489, 746, 2072, 
       505, 760, 2086, 532, 561}], 
      Line3DBox[{786, 984, 1349, 985, 2159, 1351, 988, 1020, 989, 2163, 1359, 
       1022, 2203, 1023, 1366, 1043, 2216, 1044, 1373, 2276, 1063, 1064, 1380,
        2279, 1083, 1113, 1084, 1387, 2283, 1115, 1146, 1116, 1394, 1148, 
       1179, 1149, 2168, 1401, 1181, 1212, 1182, 2172, 1408, 1214, 1215, 1415,
        1235, 2252, 1236, 1422, 1255, 1256, 1429, 2294, 1275, 1305, 1276, 
       1436, 2298, 1307, 1328, 1308, 1330}], 
      Line3DBox[{787, 986, 1350, 987, 2160, 1353, 992, 1021, 2202, 993, 1360, 
       1025, 2205, 1026, 1367, 1045, 2217, 1046, 1374, 1065, 2225, 1066, 1381,
        1085, 1114, 1086, 1388, 2284, 1118, 1147, 1119, 1395, 1151, 1180, 
       1152, 2169, 1402, 1184, 1213, 1185, 1409, 1217, 2241, 1218, 1416, 1237,
        2253, 1238, 1423, 1257, 2261, 1258, 1430, 1277, 1306, 1278, 1437, 
       2299, 1310, 1329, 1311, 1332}], 
      Line3DBox[{788, 990, 1352, 2272, 991, 1354, 994, 1024, 2204, 995, 1361, 
       1027, 2206, 1028, 1368, 1047, 2218, 1048, 1375, 1067, 2226, 1068, 1382,
        1087, 2228, 1117, 1088, 1389, 1120, 1150, 1121, 1396, 1153, 1183, 
       1154, 1403, 1186, 1216, 2240, 1187, 1410, 1219, 2242, 1220, 1417, 1239,
        2254, 1240, 1424, 1259, 2262, 1260, 1431, 1279, 2264, 1309, 1280, 
       1438, 1312, 1331, 1313, 1333}], 
      Line3DBox[{861, 945, 1314, 1282, 855, 939, 1281, 2265, 1261, 849, 933, 
       2255, 1241, 843, 927, 2243, 1221, 837, 921, 2233, 1189, 831, 915, 2231,
        1188, 1156, 825, 909, 1155, 1123, 819, 903, 1122, 1090, 813, 897, 
       1089, 2229, 1069, 807, 891, 2219, 1049, 801, 885, 2207, 1029, 795, 879,
        2192, 997, 789, 873, 2188, 996, 953, 776, 867, 1335, 951, 1334}], 
      Line3DBox[{862, 946, 1315, 1284, 2184, 856, 940, 1283, 1262, 850, 934, 
       2256, 1242, 844, 928, 2244, 1222, 838, 922, 2234, 1191, 832, 916, 1190,
        1158, 826, 2285, 910, 1157, 1125, 820, 904, 1124, 1092, 2178, 814, 
       898, 1091, 1070, 808, 892, 2220, 1050, 802, 886, 2208, 1030, 796, 880, 
       2193, 999, 790, 874, 998, 956, 777, 2267, 868, 1336, 952, 954}], 
      Line3DBox[{863, 947, 1316, 1287, 2185, 857, 941, 1285, 1263, 2182, 851, 
       935, 1243, 845, 929, 2245, 1223, 839, 923, 1194, 833, 2289, 917, 1192, 
       1161, 827, 2286, 911, 1159, 1128, 821, 905, 1126, 1095, 2179, 815, 899,
        1093, 1071, 2176, 809, 893, 1051, 2174, 803, 887, 2209, 1031, 797, 
       881, 1002, 791, 2273, 875, 1000, 960, 778, 2268, 869, 1337, 955, 957}],
       Line3DBox[{864, 948, 1325, 1300, 858, 942, 1299, 2266, 1272, 852, 936, 
       2259, 1252, 846, 930, 2249, 1232, 840, 924, 2238, 1207, 834, 918, 2232,
        1206, 1174, 828, 912, 1173, 1141, 822, 906, 1140, 1108, 816, 900, 
       1107, 2230, 1080, 810, 894, 2223, 1060, 804, 888, 2213, 1040, 798, 882,
        2199, 1015, 792, 876, 2190, 1014, 978, 783, 870, 2189, 1346, 973, 
       976}], Line3DBox[{865, 949, 1326, 1302, 2186, 859, 943, 1301, 1273, 
       853, 937, 2260, 1253, 847, 931, 2250, 1233, 841, 925, 2239, 1209, 835, 
       919, 1208, 1176, 829, 2287, 913, 1175, 1143, 823, 907, 1142, 1110, 
       2180, 817, 901, 1109, 1081, 811, 895, 2224, 1061, 805, 889, 2214, 1041,
        799, 883, 2200, 1017, 793, 877, 2191, 1016, 981, 784, 2270, 871, 1347,
        977, 979}], 
      Line3DBox[{866, 950, 1327, 1304, 2187, 860, 944, 1303, 1274, 2183, 854, 
       938, 1254, 848, 932, 2251, 1234, 842, 926, 1211, 836, 2290, 920, 1210, 
       1178, 830, 2288, 914, 1177, 1145, 824, 908, 1144, 1112, 2181, 818, 902,
        1111, 1082, 2177, 812, 896, 1062, 2175, 806, 890, 2215, 1042, 800, 
       884, 2201, 1019, 794, 2274, 878, 1018, 983, 785, 2271, 872, 1348, 980, 
       982}]}, {
      Line3DBox[{1439, 1642, 1896, 867, 1895, 1643, 1898, 2267, 1582, 1897, 
       1645, 1900, 2268, 1583, 1899, 2105, 2156, 1902, 1584, 1901, 2106, 2157,
        1904, 1585, 1903, 2108, 2158, 1906, 1586, 1905, 2269, 1648, 1908, 
       1587, 1907, 1650, 1910, 2090, 2189, 1909, 1652, 1912, 2270, 1588, 1911,
        1654, 1914, 2271, 1589, 1913, 1656, 1916, 1590, 1915, 2110, 2159, 
       1918, 1591, 1917, 2111, 2160, 1920, 1592, 1919, 2272, 1659, 1921, 1593,
        1661}], 
      Line3DBox[{1440, 1644, 1922, 2091, 2188, 1663, 1646, 1923, 874, 1665, 
       1647, 1924, 2273, 1594, 1667, 2107, 2161, 1925, 1595, 1669, 2109, 2162,
        1926, 1596, 1670, 2194, 1649, 1927, 1597, 1672, 2196, 1651, 1928, 
       1598, 1674, 1653, 1929, 2092, 2190, 1676, 1655, 1930, 2093, 2191, 1678,
        1657, 1931, 2274, 1599, 1680, 1658, 1932, 1600, 1682, 2112, 2163, 
       1933, 1601, 1684, 2202, 1660, 1934, 1602, 1686, 2204, 1662, 1935, 1603,
        1688}], 
      Line3DBox[{1442, 1664, 1936, 2094, 2192, 1441, 1666, 1938, 2095, 2193, 
       1443, 1668, 1940, 881, 1444, 2113, 2164, 1942, 1604, 1445, 2195, 1671, 
       1944, 1605, 1446, 2197, 1673, 1946, 1606, 1447, 2198, 1675, 1948, 1607,
        1448, 1677, 1950, 2096, 2199, 1449, 1679, 1952, 2097, 2200, 1450, 
       1681, 1954, 2098, 2201, 1451, 1683, 1956, 1608, 1452, 2203, 1685, 1958,
        1609, 1453, 2205, 1687, 1960, 1610, 1454, 2206, 1689, 1962, 1611, 
       1715}], Line3DBox[{1468, 1717, 1963, 1716, 2218, 1467, 1714, 1961, 
       1713, 2217, 1466, 1712, 1959, 1711, 2216, 1465, 1710, 1957, 1709, 1464,
        2215, 1708, 1955, 1707, 1463, 2214, 1706, 1953, 1705, 1462, 2213, 
       1704, 1951, 1703, 1461, 1702, 1949, 1701, 2212, 1460, 1700, 1947, 1699,
        2211, 1459, 1698, 1945, 1697, 2210, 1458, 1696, 1943, 1032, 1457, 
       2209, 1695, 1941, 1694, 1456, 2208, 1693, 1939, 1692, 1455, 2207, 1691,
        1937, 1690, 1720}], 
      Line3DBox[{1482, 1741, 1977, 1740, 2226, 1481, 1739, 1976, 1738, 2225, 
       1480, 1737, 1975, 2276, 2117, 1479, 1736, 1974, 1735, 1478, 2116, 2175,
        1973, 1734, 1477, 2224, 1733, 1972, 1732, 1476, 2223, 1731, 1971, 
       1730, 1475, 1729, 1970, 1728, 2222, 1474, 1727, 1969, 1726, 2221, 1473,
        1725, 1968, 1054, 1472, 1724, 1967, 2275, 2115, 1471, 2114, 2174, 
       1966, 1723, 1470, 2220, 1722, 1965, 1721, 1469, 2219, 1719, 1964, 1718,
        1744}], 
      Line3DBox[{1496, 1761, 1991, 1760, 2228, 1495, 1759, 1990, 1085, 1494, 
       1758, 1989, 2279, 2122, 1493, 1757, 1988, 1756, 1492, 2121, 2177, 1987,
        1755, 1491, 1081, 1986, 1754, 1490, 2230, 1753, 1985, 1752, 1489, 
       1751, 1984, 1750, 2227, 1488, 1749, 1983, 1076, 1487, 1748, 1982, 2278,
        2120, 1486, 1747, 1981, 2277, 2119, 1485, 2118, 2176, 1980, 1746, 
       1484, 1070, 1979, 1745, 1483, 2229, 1743, 1978, 1742, 1763}], 
      Line3DBox[{106, 666, 819, 107, 667, 820, 108, 668, 821, 109, 1390, 669, 
       110, 1391, 670, 111, 1392, 671, 112, 1393, 672, 113, 673, 822, 114, 
       674, 823, 115, 675, 824, 116, 676, 117, 1394, 677, 118, 1395, 678, 119,
        1396, 679, 120}], 
      Line3DBox[{1510, 1777, 2005, 1120, 1509, 1776, 2004, 2284, 2131, 1508, 
       1775, 2003, 2283, 2130, 1507, 1774, 2002, 1773, 1506, 2129, 2181, 2001,
        1772, 1505, 2128, 2180, 2000, 1771, 1504, 1108, 1999, 1770, 1503, 
       1769, 1998, 1105, 1502, 1768, 1997, 2282, 2127, 1501, 1767, 1996, 2281,
        2126, 1500, 1766, 1995, 2280, 2125, 1499, 2124, 2179, 1994, 1765, 
       1498, 2123, 2178, 1993, 1764, 1497, 1090, 1992, 1762, 1779}], 
      Line3DBox[{1511, 1778, 2006, 909, 1786, 1780, 2007, 2285, 1612, 1788, 
       1781, 2008, 2286, 1613, 1790, 2132, 2165, 2009, 1614, 1792, 2133, 2166,
        2010, 1615, 1793, 2134, 2167, 2011, 1616, 1794, 1139, 2012, 1617, 
       1795, 1782, 2013, 912, 1797, 1783, 2014, 2287, 1618, 1799, 1784, 2015, 
       2288, 1619, 1801, 1785, 2016, 1620, 1803, 2135, 2168, 2017, 1621, 1805,
        2136, 2169, 2018, 1622, 1806, 1154, 2019, 1623, 1807}], 
      Line3DBox[{1512, 1787, 2020, 2099, 2231, 1809, 1789, 2021, 916, 1811, 
       1791, 2022, 2289, 1624, 1813, 2137, 2170, 2023, 1625, 1815, 2138, 2171,
        2024, 1626, 1816, 1170, 2025, 1627, 1817, 2235, 1796, 2026, 1628, 
       1819, 1798, 2027, 2100, 2232, 1821, 1800, 2028, 919, 1823, 1802, 2029, 
       2290, 1629, 1825, 1804, 2030, 1630, 1827, 2139, 2172, 2031, 1631, 1829,
        1185, 2032, 1632, 1830, 2240, 1808, 2033, 1633, 1832}], 
      Line3DBox[{1514, 1810, 2034, 2101, 2233, 1513, 1812, 2035, 2102, 2234, 
       1515, 1814, 2036, 923, 1516, 2140, 2173, 2037, 1634, 1517, 1200, 2038, 
       1635, 1518, 2236, 1818, 2039, 1636, 1519, 2237, 1820, 2040, 1637, 1520,
        1822, 2041, 2103, 2238, 1521, 1824, 2042, 2104, 2239, 1522, 1826, 
       2043, 926, 1523, 1828, 2044, 1638, 1524, 1215, 2045, 1639, 1525, 2241, 
       1831, 2046, 1640, 1526, 2242, 1833, 2047, 1641, 1834}], 
      Line3DBox[{479, 462, 2243, 1527, 464, 2244, 1528, 465, 2245, 1529}], 
      Line3DBox[{492, 477, 2254, 1539, 475, 2253, 1538, 474, 2252, 1537, 473, 
       1536, 2251, 472, 1535, 2250, 471, 1534, 2249, 470, 1533, 469, 2248, 
       1532, 468, 2247, 1531, 467, 2246, 1530, 466}], 
      Line3DBox[{1553, 1857, 2061, 1856, 2262, 1552, 1855, 2060, 1854, 2261, 
       1551, 1853, 2059, 1255, 1550, 1852, 2058, 1851, 1549, 1254, 2057, 1850,
        1548, 2260, 1849, 2056, 1848, 1547, 2259, 1847, 2055, 1846, 1546, 
       1845, 2054, 1844, 2258, 1545, 1843, 2053, 1842, 2257, 1544, 1841, 2052,
        1246, 1543, 1840, 2051, 2291, 2141, 1542, 1243, 2050, 1839, 1541, 
       2256, 1838, 2049, 1837, 1540, 2255, 1836, 2048, 1835, 1860}], 
      Line3DBox[{1567, 1877, 2075, 1876, 2264, 1566, 1875, 2074, 1277, 1565, 
       1874, 2073, 2294, 2146, 1564, 1873, 2072, 1872, 1563, 2145, 2183, 2071,
        1871, 1562, 1273, 2070, 1870, 1561, 2266, 1869, 2069, 1868, 1560, 
       1867, 2068, 1866, 2263, 1559, 1865, 2067, 1268, 1558, 1864, 2066, 2293,
        2144, 1557, 1863, 2065, 2292, 2143, 1556, 2142, 2182, 2064, 1862, 
       1555, 1262, 2063, 1861, 1554, 2265, 1859, 2062, 1858, 1879}], 
      Line3DBox[{1581, 1893, 2089, 1312, 1580, 1892, 2088, 2299, 2155, 1579, 
       1891, 2087, 2298, 2154, 1578, 1890, 2086, 1889, 1577, 2153, 2187, 2085,
        1888, 1576, 2152, 2186, 2084, 1887, 1575, 1300, 2083, 1886, 1574, 
       1885, 2082, 1297, 1573, 1884, 2081, 2297, 2151, 1572, 1883, 2080, 2296,
        2150, 1571, 1882, 2079, 2295, 2149, 1570, 2148, 2185, 2078, 1881, 
       1569, 2147, 2184, 2077, 1880, 1568, 1282, 2076, 1878, 1894}]}}},
   VertexNormals->CompressedData["
1:eJx1XXdcz9/3j7Kz9042IbKjS7bsbCFklBWRvSXZspWRFMkqq4/xvmSLSCgz
IxHCxx7hd2/3ed6/z/t+8/nHo+fndO6555577hn3vqowdHyP4VnNzMx+5jQz
Mxf/vvr2R/z3jle/5r+7S7mthpuX1b/BgXW6nbz1htcAnrfHhjNnzt3nNu1/
Ddj+8ZmRnln1fHzWIpVH7ipyZcWMq0b6LWXTKwbWe8d/Tzo82X/GVUb4iemD
3gYI/LT/oBJBH58ZccZLdpR8knccjxLjMuLff8jo/KfFuJPTM+Q04oX7F7Gr
Ehp0MgX0xKe3omfR4F8NuIPiz4pNVvIQn+NKHrZEk3+bkp9V0ObbXs2XBWj6
qa30w3R9Vl7bNkz860D6LN9L6THnl4r3DNYBhoO/rl2//j3ViE+fvcL7nMVd
/jGt5unr359wK+Dbj+2ynb0khffLXdhqSthlI319p7HzDpQWckwPGTc97DIr
B/z2m3LdJd5r1HP3G9+fMKJPe905bJbgMzr4d60b31ON9Gf3DXkXLca9tS1D
TiM+YEUzyzHXtp0keuJzStGzPhr/14o/aw55CL+p5GGNID/Nq5GSn6VivkS/
S82X7YF+SJ5NSj9M12fXD+elPh3IPi0qKrs8W8nnotNFf8MH8M8KPD53cvdm
3eJ4w/d7ppR6kmikH37rdFRAvST+bt3niw2izxjxhEVXBq72esb/VIgt2Dj6
DDMHPuKkSzOJj37kP7T0k0SWDfjbnGN+bRZ8Wg/vn0Xqh+jne9u2shfjDu2Y
IScj/ne6XgjOlXX9yTagJ3yuomdjwJ/wN4o/y2ttKs9wJQ9LgPyEJyr5WXXM
l+ScoObL3mr6ean0w3R9Rjb/LPXpEIH9UrCC2uelGi8+ej12uqEv1pfwJR0C
jw85FmXUZwHgPj2c+55vfYH3uHHzc7H+YUZ8zVg20HAuhn+OrNG0VP8wRvjz
aYtqSfxE0R3jG4r5Ev+XtQNvnhN8IvtazRLjskLAD42p3thVjHtvT4acRj5d
zvhuzzt6zskI0BO+X9EzDv7EJ1XxZ7kOKXlo3GdKHlZHk3+tkp8lY75Ev0zN
l/WAfog+TOmH6frszaodE/p0MIO/sp2t/Gb+Ty9qxAuc9jvhj5akp7oJPmSf
hE8u9qnhJTHuJ+izDvD3Xbr9e0bIOTjLgtllhfxEr/ZZDBt5bPo/gg+vC3zz
k2YRFwWfObciY8S4RvrGM/1GDhPjVpmaIaeR/vDL33sLjp7TjOgJt1P0fBT4
25ry55M0ecoqefhNyE/4JyU//4T50rymq/nyipp+fij9cF2fQ3761hT6NNB5
ZB6tzqF/z92c2knYeW/4Nwvg7T1cPst94YH9SPQTP3ZLChT7iOyT6DscnVjU
X+w7mi/hga8sPsn92P729M5lxH4kPmr9k1iBp4XDxbhG+p8xu1OkH/i8NkNO
I97k6Wqv3FnXN8sPeuLzVdHzjhr/vIo/94Y85qby8J2a/E5Kfu6izXeWmi/v
runHRemH6/pMfug4TejTQOf7ODd1rjfs6teMC79N58tY4G03to2Tfp78IdHf
eD5svjwXaP+OAb65W78X8hyZBXsj+iX/5j4mcdIP8bcrkfunPKdmdKyzTIzL
iU/2DHnvsmKhGXIa8Z+Pl88R52Azoic+WRQ9L6jxr6f48zWQh3A/JQ9fBvkJ
D1Dyc3vMl/BENV8+TNPPcKUfrutztlPN5kKfhkmIl3K4qDgJcZADne+E4/xk
dB7lBA5/z+7CfxI9/BarjP1OOPaT0T4Jx/qzotAn4ZgHM8v4770Rx7/Nimv0
7pjf18z58+aaPOQPDmvyF4F/7aPNNy/Ot6uaflogvtD1OWNDRlxneA79Qz5G
9jwG6zUSeDvNnome7PkQ7IFw2IPR3xK+FPZM/oFwsueZsE8P4Dlgz6RPoid7
1umzwp4LZc6fr9Pkwf7iKyA/8QnU7Jlwsmc36If4uMGedX3OhT1TPJ8V9vQR
/pniT8I7wD9TvET4JPhnA/wb4R3hn93hDwnfAv/sZOo/WWH4Z9rvRJ8O/0z2
SXhT+OdCGv0P+OfO4E84/D+fYuqfme6fiZ7882BtvnPhn3to+hkE/6zrMwX+
mfKj2tjPlRFvOOA8JfwD4o18iD8J90W8kRvxEuE5uqp4wwvnO+ENEG/QfAnf
h3iD/CfhTog3aL8Tfh3xxlqNvh3ijWmZ8+e+mjx2iDdeRprKn1vJzy20+a5A
vNFQ00++pSre0PXpjXiD8k34I/a5kYqfGyI+RPzJPBA/30E8SfQjET/bIv4k
fCziZ4qXCD+N+DkY9kP4ZcTPtH8JX4X4+RD8J+GVED+v1OiXI34OMY2f2SXE
zy80eTjiZ0tN/nGIn69q8x2H+NkW+iHcF/Gzrs96iJ+tkL9Y4jz7B/kg5Zvw
+ywG+WBV5EdE3xP5IMXzhMcgH6T4k3AX5IMDsR8Jv498sCn8IY07DfkgnUeE
X0I+2Eyj90Y+6Ar+hN9DPmhubSpPf+SDpE+ij0U+WBrzJdwV+WCypp8k5IO6
PnchHwxEPo7zkpmjvkH5O+GTUN+gfJPwzahvUH5EeC3UNypgfzHg11DfoPiT
6F+ivkHnC9EfR32DzveWwLujvjEc9MTnGOobzhr/FNQ3GkEe4hOD+kYdTf46
qG+QPol+B+obwZp+/FHf0PXZEfUNqi/NVPGHg16vmwVcr9cRvV6vI1yv1xEf
vV5HuF6vIz56vY5wvV5HuF6vI1yv1xGu1+tIHr1eR/R6vY5wvV5HONXrNnS4
+XGgx1vu5bLQaa0YZz8763VW+M+T3Wra1HZ7yScB71vCmsnzl/CNjVd6y/Pf
b2PEQ3kuRIaujJf6Iz7Jeyo0/u2yxbBnWfrvaKE/qhMObah+7/yVn0kLCt03
0i/id+Oknb/cHDtswspnfBP45z61qZ883yNG9GrIhb6pDhlU0SxNznPkmzeN
frssdyA5O4YpOTqvH26bcOS2Uc4urewfy/1S9KCL+P0VDiSP/0+ll4RsbXx9
Ct1nJI+jIW20lGfa5hLnqy3zdSA+hhVqPjP6z3sp15PkWWU1eWFGnXRqkEHo
h5E8L99M85V+8q1v4oLEI7cZzWtmqTkrpDzj3zdcJ9eN6rfZ39Y6Lte1Umzx
aoM83hrlWesRmcTFuqxb43hX6MfI52Z4Ljvpt3N3rpVL2gXJU35l8rZV4vd0
PksUH1Z6crHeUk7ik/K+wB95zup8iik+rCbmRXxS1LxYGY1PkuLDPDEv4mOh
5sUeQM+TTPXM1mvzuq7mxWZnrmcW9uFNk0zWnX3U9DxD6Zm1e+K+J5N1Z/th
h8RnmbJDlr/RoQuZrDsL0Oxwt7JDFoF9QfpxU/uFNYMdkjzOyg7Zdm1fjFf7
gq3R9uN9tR/ZY21flFP7gh3EviM+M/pl/B7T96P9xxtyPzoch5zE56Dav6yB
RdBwaY+Ev/u9utZdITft05tV1H4r/eZPcxnv0b4m/QSlOIp9ssGwcfuZbfL8
Jz6dVqQXnijk7gQ9EJ861nkiZDzQMuD0ShmXEX2bbJajpXzRHeb2PlnikpF+
6oCkQ/Jc691myDgZLxP9pmdWLSX900mPvnLr6Q5Eb+au1qn9ke4XpB0R/eUN
i7dKPWa57nj9VIlLLB70ZzpV7Sf5+9QZeEyuD9Efy1/+npT78rzoSPEviwP9
jnj/vFJ+z5XKLoj+6Oc63R9sDDhZcvL8fAuFnZM8tt+25ZPxLfEnvR1W/Fkp
jb66omedIP9GU/lZjCZPkJKHuWv62aj0wywwX+JvUPNl1pr+2yr9s0l2od8z
0SdbrK1vT7W+7IC2XrPVerE6ml3l/JNhV6y1Zg/2yh6YblcTp1yXduVwFnZI
69VG2SEj/1/uj/LjQ3a/SL4V6+FA5wXxbzwy7zduvcRA/pzouyT2iet0cb4D
2Q/hA+2XjuXWSx0m33lV531fm1NlgW+IVOfH3YfzV52xnm4g+nrPK+eR9Bbb
Z/WovszXiDdqmttK8k+bM8xDyGnEh77z9YwTcr7V8AEKN+h8Gig+hofauHXV
uIZfle/WzUROwzVtXsPUvAzjNT30V3ow6HrrOzpM6s3BTdPzCqVnQyL8+emK
6vwbVczr9HCxLsVxzpI88WfK2r7v26w5nYNE737RwGW8TfvxDPAOjSztZXx4
D/Ml/LKLOg8cR2drz4W9EZ/sGXH6XTZ0RoPs0m8RfdK4tmUk/6yHYo4IOY30
B98XWj1UyKnjuxXOh4AP4Q8UH95aG1fVD+9y38CO/pnIydNi1byIvrOaF3+u
6cFL6YHrerv0/YLU26nb0DPxX6X0zOlcbvZexQ3eiaOGXRb7fxrOTaK3uxEh
9LjEYS3OWXvQO69/W2SL8C9X4E8IH1Rk3UgZt5vDDgmf/0Gd66QfwnekJhaV
9FlXHu0i/T3h9TLqAUnMZ8uyl9JPE76+/KWFF4Sci4CT/KsUzs01PqqukMTd
MC7RB6lxeXCzEj0zkZMfxbyIfqiaF1+u6WGk0gPX9eZyq/NqoTdDNeiZ6AOU
nrnbzR9vpD8n3OXL2wPSv1Hc1c5fxWG72cxgeY6PQ1xE9DZvdgn9bnDwGV9s
gNQT4aWXevpJv0pxGvGJSVnpKuOKnmemFJVxFtHXrD3/l6Sjc6QN6HNbV8t6
UMQzwTNLfJJ1IKL3ybMhXtKTXyL6oK4q/iuzNHSejLtJbwmrlZ83x34heUpa
NQuU8dK2P0cdpF6Jf50/M1ykfdO6E3354y92y7jR7qNaH6P8FilfxLnZzNJ5
oIvQm5F+VEZ9NIZt1/jXVPw50ZP8gxQ9Lw/5if6Okp+TPERfVsnDj2r6WaD0
w7Nr8y2h5svra/q3UfrndouGjclEn3wS1pf0aa3Wl5tr61VArRcfrNmVt7Ir
Xgj2QPR3lD1w3a6yzKrvLOzKUAF2SPSJyg751TJt3eW6EX64q6ffIiEH2W0z
hTOy21zIC4h+tMNGDxlPVt9RuLNcTyOfAxfr1hHykd02Bx+y23mfhraRdS/S
57dCc73leKWhBwb6PLDbqze97sp6JNGPX93UUdKT3ZKcZLe/bpywkPog+t9+
3bdJObJhHUmeUrDbuxXqXZfrSfSxRao+lXKQXyJ5rGC3s7qp9ST6s9Mb7H1U
P8hotyQP2e09jf8VxZ/nBT3J4wq7/Q35W4M+XcnPdXnKwW6TM9eP0W6JP9lt
P+if1uu70r/RbjV98nLa+hrU+hrtlviT3Z7T7OqOsiuj3RI92a1uV+cWtRst
6wYVYYc037ua3ZKcZLd0DjZR9s+m4BykfJbGHQu7rYF5EX4Edkv5NfHpifOR
7JbGJbulc5PoB+PcvIZ1If6esFuK65qCfgHOU7Jboie7pXiG6OmcJbslerJb
OjeJ3g7n7xzYLenzHOyW7IroN+Bcvg/+RB8Du/U1PceZP87rP5Cf9PMLdptN
k8cW53iyph+y2+GYbxPT+fL+mv5/wm534tzX9Gm0W+JPdvuPtl7DEA+Q3Rrt
E3a7AvZA/N0RJ+h2dR52W12zw62IE0bAnxOfQYgTHprGz2wM4meqCxF9HcQJ
i3COEF4WccIH03iSjUZc3QvnFNHjnDLmg0TfCfF2KM5Bol+EOIHyDqKPRRxO
5yzRJyJO0OJklgvx+Q6c40Z7QJzgZhpvs6eI2xsgTjDKjzghh2nczg4jntf5
10KckFOj34c4vwLkp/VCnGO0Q6J/jPj/GPRD9IijeIfM52uME4zriDhhKfIF
TZ98sra+lRAn/GuaR7AeyCMGa3Y1BXFCqmYP3sgvdLvKijiB8jgO+jXIL6jO
hryPBZc/kSLza6rLEf/GyC+obkb0eTptuynzXy/UEwh/4+42XubL6aZ5K7v0
TNXpKJ8i+n8K/7GU9BTnE/5yX/cKkn99nF+Eu48YMFHm1w00fIjCDTqfFMXH
sCzzcQ0LJ1+0y0ROw0BtXv+qeRmya3oorvRg0PU2BPnFLk3PN5SeDQdR97ir
8nGWE/W39qhnkjz9C1rWk/k11RsTQV8RdbaDqM8QPhz1NKoPEP5qlMr/KW8l
PBz1MfKfhK9DHYziAcLLod5loeHFUdciPjSvNahf/Zv5uGww9KzJyQIxL+Lj
jrqTnaaH2qgv6Xrr1uGI1NupfdAz0ddFfSkS9dKdqh7F5qHfQXVgoq+E+lIS
6rQhoE8/qfoXrSAP8WmDfgTVYQg/hP4C1QeIjxf6BctwHhH9WdT/CyK+Ivwh
6vk6fhv1ecp/if8Z1NtTtXEnoH5uAXvW5GT1MC+ib4/6doKmhwKoV+t6a4X6
EtXPQ0G/C3XpmqgfEp8U1KWpTh6k6ttsD/pWVFcn+k2oSy9H3ZLw1qhLUz08
GHx6o8/VCHVRom+KujTVIYl+IfpWnVF3Jf2sQF16COpmJGc79Keao65r1D/q
0rfgh4m+JfpQM1A3Jv77UZemugTJ8wL9puGoSxP/MNSlrRFX7wS9P/pKMzX+
4ahLEz3xp/4RyU/0p1GXpvgnBPTP0ScaDP2QPMtRl76H+QabzpcVh/6Jvz3q
0jvhJzV9suna+qLvYOzvEH8/9Hcqa3b1R9kVO6DZw1D0cXS78kBd2h92SPTU
r3E68bWxXDfCSwel9pfx5CH0Zaif20X1azj1cYj+KfqnK2+H1JTraeTv9yCH
jGOpTk79XOqr8l9hRTPuvxCf5Squprou0VP/9Nnt42HyXhLRH7b8nFfSU5+U
6KlPWtW8yzO5nrS+5YePmCz1Rf1Qmhf1Q/fwZ1ulvsneLN23H5J5BMUhxJ/6
npX3qPUkedb2DV4h8pSTFG8Tf+pvEn+iz6X4M52e+pjVID/Rl1PyG/uVJA/1
K79BP2RvEUo/xr7kHNP5sg2a/p8p/Rv7j5o+2QJtfZ+p9TX6SeJPfcZWml05
KLsy2ifxp36ibldN0QcknOipb0j2Sf1Nss/OGJf6iWVhz4TT+5TPB94WnRl2
mZPdEv0D2C31GemdS+5K0QZ5X5DsluihN969VUxNGXcQfYVPxQbKe5wpWBdv
0B+B3T5o9PGuQcSJ9O4mp7oHw6tj3anPWwF2G1fsW6TMS0j+Nt1Tfst7Knth
VyRPXtjtcMTbJE9oeM6iUv4qsFtjvx52S/UKov/i6HJxqtCPzp/sVqdPU/Ss
pia/FeyW8kqSf6eSh/2Cfoge+5rdyny+bLOm/xewW9cRV+9nok+2COtL/J/D
bu2xXsS/slov1kazn+awWxvYA/EvpuyBddLsqtzBDLtiqzAuvdNZPeJ4wybR
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
utRf3oq67mH0O6xUv4PdwP2iTuibvFV9E5aM+0Uh6NfUUf0aVgL3i7KgP7hL
+54P9RODgR8F7oJ+nx34fES/bwb6U7vRRx6C/mAe9O9Inobo311E/8uAfnRn
9Pt6oU9H8wpAn2681tcOQF+vD+grgH497kdZauPWx/2okZC/nqn8bDX0Uxd4
SfSzPND/ov54AvpfrTQ94x4XK6v168ehn7Uf62UNOX+o9WI70c+KwLyyoJ81
GH2BdNUXYI7oWwWij9ZR9dFYG9xz80U/wkb1I1gg+lYG9PX8VV+PDcX9twPo
a/wA/4HoW2VB34q+G3MY634Z/cRWqp/I0nBf7iL6KSTnzwDVt8qKfnc43pe2
R787K/rjAcA7AE9GH6cm5LdD32oh+t2dMW5z9Ls/oz8ej3sCx9Af74r+0U/I
0wZ9q3Loa6+FHqqir50HfV573EOgPngY+tSdoOeh6FPr9xnuoq/dTRu3JfpW
xMcJfAbhPmEK5mtjOl9mpclZGfcM4zQ9f1d6Ziuhn/bQTzPcPwzA+hL9EPSt
ZsFOSM8h6FtRv5j4fEC/eDT6y4+h51j0l/tp9jkQfatDsDeSfwz6yNR3pvse
W9B3Xgd77gz9uKEvnBV95AnQc0f0kb26hk2RecyNz6vth4g8wiZxgovMI3L7
3U8LEHnJfovDs91FntKz07sUmR/tLO8fJ/IaI/2leb6/5e/TPY0dmn1+Dpi5
QORNjOjnWG7dKempr6V/X6jcsZdrZH50AONGWD1tIcfNpt1TpXcr7y/6x8k8
KA78pw7y3SPzvnnafVf9PQvxofcsxIfknKz4sPKZy8OyBKp5XQf9TDUvtkTT
zzWlH/ZnsdIn8XFV+jS+fyF56P3LaG1duqp1Mb6LoXnp72Lo3i+9i3mivZeh
e8WTwX+74s9rYd0tse5zlZy8N9Y9FPMKAn2Mtu6Ttfs537DuwaCfZ1z3uZl+
n6cC9DwH4x7Cusdr74YWqPvS/APWi+SfhnX3w73r73h/NEbduza+V6J3Uinq
njb/CD40L1p3a02eSKy7BdZ9B+hna+tO8tzAumeBPonPEKz7du3dlqu6T87G
YV1IHlr3CriX/hPz8lf30ll/3GMnPpHqHrus/2S836Tvw9zC+807uA9P76QC
1X14vkJ733RR3Z//n/dQoeq+Pd+mvZ+KV/fz2TDtvdUddZ+fTdHeZ61S9/9l
nfaIfA9L310piO/GNMr8HROvp717MlfvnjjX3kmFqncK/Jz2rqqvetfAwrV3
WM7qHQRrqL3b4urdhJCzRcZ7bfouykC81w7N/H0T+8t7KBatvZ8KU+872ADt
vVWQeg/Cz2jvs/zV+xF+QHvPFajem4j95Zrpd05G4N3KQtN3T0x/J/VQvXNh
zbV3VZ/VuxgWob3DclfvaPgS7d3WGfXuhj/Q3nkNVO90hN94by+/e2D87ge+
z7Bfew9lod77sJt4H9QB76cC1fsg1grviejdVrJ6T8TO4/0R8cmv3h/xxniv
RHw+qfdK3BHvm4h+lHrfROfU/3yXIxrvpCzxTspXvZNiufGuqjbeVTH1roo1
1d5h+ap3WCxee7fVXb3b4lXwzssWfHaod168qvYu7Jp6FybkVPrUv3dB+qT3
VqTPeO291Rbos7X2PkvXJ73DKgB9NoU+ic8X6LMV9El8SJ9ZYJ/0HYbRsE8P
7V1VYdjnKthnEt5hPYJ9Mu3d1jfNPokP2ecy7V3YOdjnQ+0d2RCjfar9Tt9V
mIT9flx7b7UM+/2q9j4rGfs9UXvPdQL7fYz2/usI9vst7b1YCPb7Oe192T7s
96zwn/QdgFf47kEp7R3WGvjP4tq7rRT1bosHaO+8FsN/hmrvwuzgP5dr78ga
wX8W0t6dbTf6T3Ue0bv7yziPzmvvs1bjPJqtvef6B+fRPu3911qcR8u092IX
cR454zzi4HMR59EY7T3abJxHFJ/o7/Svae+2ZiIOWYB4g96LDUe8Qe/CaoD+
IeKNAJz7xKcvzv3SON/pvdhynO89tHdq4TjfXyKuw7tQPmdFwRxJNwMMBxEf
4l0on/8+h33WTusM1bv6LT1kcYcPu+2e3GyN8ENdW479Vf88b4z4E+9F+fvP
VbefyO9ryOnkPGj8tFgj/dx87ar1Kx3PhxYOX7zx9BEjXnuQdR73+AS+d2qr
3gGnjzDCZ+SyfTpK4Ady55/tOS3WiJ9qtOxIX8GnU3/X+0IeI25Zfl+FdCFP
QLFJPq09E434ocABafk/Lzmp0+dU9CwS/N2An1T82cnM5WGtNfnrKPnZl46m
8/VR82UVNb1VUnpjDV4tz7ATuo9X5YqnS7T1dIcDvfNm2Dnh9WY/2Fhd5P/1
8z3K2KeEzxxdfIGMm38d7JjhZwi3y3K4m8T/8R6c4ScJLz3ENY/ksyfyVoaf
J3xL+Jmzp8W45+JuZ5xThH+5wz5PD2xhb1bmuQl9O8cISW8YlrdrZvwN6Zo8
9ZQ8Bl3+m7eqSvkN+nwfFLkq52tImjvLRD9xrq5SPwbK+/7/HmOLjL9vZX4j
tswRsb5P7EctlnqeMvzUu99Cz7XPH/KbINaX8FEfZi7sL9Zl0/DiRTeL9SU8
55S+pzzEOv74deBpoFhfwseWH7FW4t03jQ+bKNaX8OmFowtKPrcfh4wR4xrx
h2Wr75Tr++3GLce2nolGfEOv4MSCn5c0u6XRJyh67qzxn6b48zy/lTyPgY9R
8vBZmvx5lPy8rDbf8Wq+/Nd1U/2sUPrhlsiLEX/wpD6RrU6J/RvlejXLt6HJ
rAXedd8f0XpD6I54VnXtjZltG4nzE3jjEf7e9w4+Ye3rFyuRWvGcEe9X/1L6
0PwpbKrr3IOvK57jhM8/+uiOxH0nNvFt1+iBEW/SqK+l5FMrMspJjGvEW711
dAsR41JcRPJ0G/bnzfbPG5vp9C0UPV8C/kTfWPHniyGPg6k83EaTf4CSnxfT
5ttczZdHQj+Ef1D64X6oGxDea+HT+9J/tvTeb+m+4xVD3MZXFAlqVHXXXVbn
4wA2c9xTI94y3NzqapkX7Ny9tIfZu11hi4D37Fn0Svmbb5i95deWubtd4YuB
PxizfKPEl+celib4cOJzZqD9uhjBZ/Rkx7FiXE58nLv4hVYW41I8SfSl1xhc
Xnfe3ozoCe+q6PlKjf9pxZ93hzzE/56Sh2+D/ETfW8nPK2O+RN9BzZc30fSz
X+mHf0K9hea7O9eSQfKc+gx8AeLgLB+eDRS4wxLoH+vLbgwdJvXvYAn/kKTs
n82FfygG+8d3CljcvmrS/h3ssY8egX4C/EYo9h3xKQK/kQ37lPAp8BtDsa8J
Xwi/kQQ/QHgK/IZFnPIbhIfAbzwGPcnzFH7DTeO/AH6jmCaPN/yGryZ/MfgN
G8zXKD/8RnZNb5vhN3a+OHH/P/6ZtRi0YpA8v4pt33XpP/6ctbtzabM8d75N
KhP1H//PHPP5+shz6nRxP5v/nBfse3BFZ4lXOP192n/OF7bYemBeyef8/IoO
/zmPmJjJeXl+PXnYa89/zi8WcWD7F3l+jStZODN6g7XG/9HSsZK/wWP/VBN5
gpsWds64N/nIxkT+jVM2SPkNf5mvofPscBP9MKUfQyHEA+4qHmBfuqg4Khnx
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
    "]],
  Axes->True,
  AxesLabel->FormBox["z", TraditionalForm],
  ImageSize->{310.60980388671993`, 432.},
  PlotRange->{{-2.49999999999995, 2.499999999999698}, {-0.4999999999999874, 
   0.4999999999999874}, {-2.4999999999998868`, 2.4999999999998868`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-0.7410128965136009, 3.2057314637712246`, 0.7900542192708893},
  ViewVertical->{-0.035659783906813784`, 0.4940398967264675, 
   0.9944673765536096}]], "Output",
 CellChangeTimes->{
  3.660886846334614*^9, 3.660886901116037*^9, 3.660886998927127*^9, 
   3.6608871166819143`*^9, 3.660887171974408*^9, {3.6608875697920227`*^9, 
   3.6608875840999727`*^9}, 3.660887632709969*^9, 3.660887925955917*^9, 
   3.660888525737656*^9, 3.66088873135163*^9, 3.6608893047796373`*^9, 
   3.660889417432925*^9, {3.660889775540924*^9, 3.66088979073361*^9}, 
   3.660892187804604*^9, 3.660893850524569*^9, 3.660894676892153*^9, 
   3.660895192892469*^9, 3.6608952788184958`*^9, 3.660895369142407*^9, {
   3.660895419983614*^9, 3.660895437571154*^9}, 3.660897103626083*^9, 
   3.6608971848062696`*^9, 3.660902590151121*^9, 3.660903025930375*^9, 
   3.66090306333416*^9, 3.660903281054262*^9, {3.660904152304862*^9, 
   3.660904177772046*^9}, 3.660904455834334*^9, 3.660904502802932*^9, 
   3.660905303730982*^9, 3.660988365172655*^9, 3.660994102081834*^9, 
   3.661061641175125*^9, 3.6671103237663*^9, {3.667110564889552*^9, 
   3.66711058390481*^9}, 3.669448116038928*^9, 3.669452978015335*^9, 
   3.669453385353818*^9, 3.669531578310569*^9, 3.669532761267123*^9, 
   3.6695338425339003`*^9, 3.66953438209582*^9, 3.6695474592781277`*^9, 
   3.669547662005212*^9, 3.669547721863834*^9, 3.669547771392747*^9, {
   3.66954782282034*^9, 3.66954785515526*^9}, 3.67012417405966*^9, 
   3.6701242737169456`*^9, 3.6701243572487164`*^9, 3.67012440040528*^9, 
   3.67012460978349*^9, 3.670125215724906*^9, 3.670125260366482*^9, {
   3.670125341379361*^9, 3.670125368537551*^9}, 3.6701263320488873`*^9, {
   3.670127032076576*^9, 3.670127041315843*^9}, 3.670131091295458*^9, 
   3.6702277716613503`*^9, 3.670234090590432*^9, 3.6703100572348223`*^9, 
   3.6708352696243477`*^9, 3.670835659356412*^9, 3.670838525774087*^9, 
   3.670838594068248*^9, 3.670839053474608*^9, {3.670840205052466*^9, 
   3.670840208432914*^9}, 3.670924958639103*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvWd8VFea7b0G3DnHST093dO3+/Z9Z+6MbMCAwQbb2MbYxuSchUo554yQ
hJCQhHLOOeecc0Q5I4EklMg5x7tOqJJw4w6+nk/vrZ/XUanq1D777P1fz/Ps
U0f4s8NmWhr6h8201Q//5iOTw0Za2uqmv/nQ0IQvLf474O+WUzm/gfD8BaDc
vOB/L1YIG+GV//f8/z3///nzfxSf/xBVVVUwMjKCu7s7XF1d8fTpUzx69Air
V69GbW0t7t69C3V1ddjb28PT0xMuLi548uTJTxY09Q/i8x+Ju/7Hf/wHxsfH
8fjxYyxbtgzd3d3iuyMjI7h//z5mZmbEpp49eybus2TJErS0tOBP2/smxsbG
8Pvf/x537twRX9m9ezdOnz79TfGXxXj+/LnYy/Dw8Jc+/jP5fYVCIT4TtEhu
sre3F3/84x9x79498RVdXV2YmZktlt8WelVSUiIOwrVr1/C73/0OnZ2dC1v/
hrD5rtD4N4TA8pr8ydHR0T/pq7e3t7Jhjhj27t2L0NBQmJubIz09Xei/3PAD
4ccPhDZ/KPddilkv9105vBMTEwuH9zX5I8IkPXggNgVpCHBJ+PFDoV1xtl+b
7/A3UFNTI5w5vLy84ObmJp6y8j2h88uXL8eqVavw8ccf48aNG8oRHlN19X8t
GGZld/9N2qlTddxlwjPxdH4nvVWr+vy6L/98gWqnTap+f+Ov5FXY6xX7/Ehq
OUnVswNfoGR+bP46kL9sH/lAoapT0FMNgZKVL+F68Z9/W274lOoMrL/0DP4i
51/ytnwIB1XfXSXi/3rOv+RtuWEjVd8DxBdee8mjfCib+RLU/8Lb8lHUVd2P
W3CUBY+/xgKvek9uf7vqLLJffRa/lZ6sV/Wj8tX9kPdbpdqv7ZWRi48f/d8F
a2nc8L9VHR+Sz3Jhh5QI/fBriObyAX+jOrOZV7C6aH4uFouRSxhvTU1N/iZs
v4u8vDzVMAj6G/KB3IGfqs749oIzXtjm/Bl/1eQgH+r7wo9vCu2LDf+d9Csf
P/i/yhALW18ktP5EdUpfSBPf+9vTxDcWNL5gcoSfV4RnPxKefvcvjtzfnkwW
ntUX/MPnjqqgv1t1sv/4Z3rxrwtb+9NdhN8tVU3ycAfVFNBQk8jXUVMsgq6w
0RM2+sLGQNgYChsj7vUajLk1oUwpMzXF94TPLVH17H/+tT17VUXy8msG8738
MfbyaEJPj1LspdAh4eiwlntux58OlCN1jHJ6+fkiHBc2zuIZCA8XPnOVtAgn
hI2bsDmpplgMd+GZh7jrKW75q/CmsNdi1Wn8SJXPXxWh/syZLn7FawqVPUjs
7gVnqk1xEoQx/xmklOCnNh+kvi1uv49gvhYiK1T+KbwWSAn7+1DelBd1Sj6L
H6imbN2fCX9/5kRee8Vrh+en7BvYxqMJJ3OAOiJD9i3xvW+JE+Eqj6u71Cvx
HaGXi3Ca22+IvfaVJZyFv/heALffFM8sSD7L4PkzX4QwcdrCuY2gIiUtQpSa
4ptSlI3mS98Wfhd3CJM/GySPlr90PHGEviOc2pavxvM3XvHafilqSYOzlQfa
Se2h9lOHxVOWspvAsr3Mr8Dxnw6WJqdSi4OlzUHSET/lr6bLodHhCQZy+x2e
kA4HRocnpy0qlAqjwkVp8eS1uG8kt9/hYGhxWLQQw3YFxVJxVLwoBRLEgU9U
U7yGJDWp0OenhFeFd+OoGEo5pOEyhMK0iOO486sN4Tdf8dpu+R3hsYntb5cR
E0ZQXeif8PglrOTAYPvKgdTkQGpyILU4kNrw5CB5c/B81PRImT4H0YCDZyi2
FKpmRBly4Ax5WoaLeH6GPPNI7hIlK5qKoWJF6XM09Dkq+hyvBG5f46jpI/F1
fSRJWoTkN7hJeUN4L3WJPlLf0KW0kfq61mKkCeSlK4f420hhf5OpRHkShOGO
paIlrMXR3frVRvdbr3htm7BdLMeZLTzGLtm90rj+vRhwLV85tpocWy2OrTbH
VodRVJfxU49jq8+xNeDYGnJsjTi2RhxbYwJpwjE15XCaiS1HqZmLzjTjkWK4
jaXiJC1C/OvcJAibxDfMOPdJ3CYtMUOyrBRBS/l2qrBJW8ZN+jIzTlPGMlPK
mDJCxlIDSh8ZS3SR+YYOMl/XQhZ7vYhbjmM2T+L7yFF7qSAV3kImlUGly+8l
y1MRJ0QVPjZ/teH/9ite2zwfHxaLdG+T44M0Jf8s5t+Xp0CTU6DFKdDmFOhw
CnQ5BbpMVHqcAn1OgQGnwJBTYMQpMOYUmHAKTDkFZpwCc06BBafAksNvxSG3
pezEI8Wp2cuBejGSltoiWdAyWw5WCrfkltvUN22RJonjvZybjOW2XBZnrrBF
lig78Wf2ChvKCtnLLShzZL9pShlTRsheZkDpI2epLnKW6CD3DS3kvS5MSp4w
KflKQ39L+F2cnWx5NtIWGEMcsY1fbRq+84rXNsrZTRljBO2QzYafi+nYRDUJ
2pwEHU6CLidBj5Ogz0kw4CQY0gdcmHDQT3HQvTjopznovhx0fw56IAc9mIMe
qmb9XeU4LzvJMXZH8pvu/C1F3Ka+eVLF4vel7JW7ypllfO6q49Qx5L3lSNlT
tshbaUNZIW+FBWVOmSJvuQllhPw3DZHPgS5YqocCDnQhA07R65qLUCTSVbyA
+0XyiBfytQKKk4BceeQz5ZEX9/n0q434d1/x2lphK15EWkj/VrlX0ms/FWsh
1qJi3WlJ8m048A4ccCcOtjMH25WD7cbBdudgn+Jge3GwT3OwfTnY/hzsQDVr
DrqNMrbGLzmJBA544punkLTcE0krvJC80ps6LR01dZUvw8lqP3Yn7W0/pIvy
5RvC9lvI4DbjbR+VMt8+jSxB75zmPtnvePNzOe94IVfQGk8B6jWe0sF/hsK3
nVG4+jh1jHJE4Sp7yhaFb9lQVpQFCleaU6YoWmGCIk5iMSexmJNYwkksWSJl
/dLXhfVhqZLOb4pTKUyqMH1584YRx3DDV5ux773itddVxaMykC10i/TbT8SC
T1mrm3LGrBirbGkVB1rkuDhjpoxTFoxTloxTVoxT1oxTNoxTtoxTdoxT9rIP
f4gYTlfcUg/EL/NEwnIvJK44jaSVPkhe5Yfk1f5IeScQqWuCkbY2BOnvhoqf
yngvjGHp/fDXkPl+2GvIej+Ukf79EA5T9roQ5KwLFpUrKgh564IWIf+DQL5d
wG3BBwEo/MAfhev8ULTOB0Xve0uz92OUrHFGyTtOKHnbESWr7SlbygYlq6wo
C5S+ZY5SzlwZZ054lHPmypfpoXypDiqWMM9XvKFg6Kl4fd52ZXxeShXLthMs
l6W02vqvNnGveu23qrXLz14R5jbLpLAGFepRBaWrplxraYnhzk4MdcL8GTPP
mNFtwtzZ0Gl2dJo9neYg17E/QRTnK4bzFfemN+JX+CBhpS8S3/JH0uoAJL8d
xDkLRsraUKS+G4a09yKQvi4KGR9EI/PDWGSujxNbeQ3ZH8ezxZyP45CzYV65
1GJuY/leHrd5G2JUyqeYPjZEc5FTsCEKhZ9IKvokkopA8YYwFH8cQgWjZH0g
Sj7yR+lHvij90IfyhnLNWf6eK8rfdUb5WieUr3FE+Tt2lI34bsVqC1SsMkPl
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
nN1QDo+fynGRknJ1WwWCjSsQvqcCdygpDyzLpXWFpRfzZ50oQP7pApTa5qPK
MQ/1zrlods1BOynp9spkxZIhvXfc7zWm/JNIyQtS8pyUPCMlj0nAA1IivgFC
GxHBuMmgpET4MdhXR7jQmM5gNujoR4Pkb9/ei1F38b54dGF403/8YWJwg/4j
OnzHzx7DY/VzXPo6EYHrkxH28xupn9bNCOtXO6V1Bcd3sxD17IpaAigpwR1Q
hnVj8La4NG3i8QCmng9B9XKYkjKK2fQxzOdMYKGAWS6dEpJSS1IaZW9pJyFd
/FnJ7X2kZIDvGSIloxP0IHE+mnZ6CprpCcYYYwQLpEQtU9LdV4Oatvyz0i7r
16EeSaCI5zpQsmRQ8sX/3kDmpQRbl5Vh+2fl2LmyAnvXVGDf2nIc+VrUMw7r
y+D6Yxku/FwOf8MKBFJNQneVI8q0HPfMy6WVg/d6oOOFyDtVgGIyUuGQj9qz
eWhyyUWbeza6vLLQKzMy5pdKRpJZcLzEzLUEzAU+x0LwU2huPiIDtJ5w8bWI
2kiqSSTVJJJqEukLbZT41nRt6LGPxsjfLWFEX816YAtFxNgggI4jlsPOLHsA
5+XPcP7LBPh/m4TgjSl0nA86Z3nKV7d4Ka0Y+LTI/5n/hP6IbgzHCD4mnw5g
OoF8vBrGzJtRzGWOYSGPo7+IOS9n7qvJQL1KVhFy0cnoJhu93N7P1wf5vuFx
wceEmEvRTo2Ti1HGMBbJxtx4F6ZGxVl9TZ2CX2dZRcQ+PpOVJOUtIGK7znfy
5edF9JoSGLEvMl5eDpNV5bD8ohwHvyrDiW9E1p03lMHrpzJc2lKOa0blCDEu
R8SecsSYleOh5btTUnWXX6YfK6LXFKLQpgDl9vmoIR2NpKPVLQedntlQemdi
0FcQMumfgumrr0hHIuaCEkhHHOl4QjroN+H3xT5HUUWiQxnXGZcZ4i5N2vDT
mLp+6C8+FiH/Udr2oYJsM7iMXQZBtBmxUGH36WO4rnoOn68SEfBdMm7+9EYs
CuzORpzFkipW1yi71KPCqwm1bJSbr7ahI6gdylud4v/1D5iKG4AqcQgzycOY
TRvFfPYYFguY7BImvoJRQwgaZPtoJxRdhKOH23r52gDfN0Q4RsZoM+MyHHw+
NQLN1CA0k31YIBzqUXGSXmd3iTRt5CLt6io+j5LaHbGrckEiqUfOu+kV2W62
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
PYV4qEu/XP2nHi9FNtNfIKe/Wkp/sUi/d4GU/gE/sUIxHpiDyeAsqMMymf50
avkbaGKSOfApAPcpAA+Eh2mfUv+fUf/jqP9x1P84cb2i9tE5TEUek+8a8T+M
wF+/Nzr05f8llv/Xqf+hLP+jYSXrv8OKeLh/+RKX1qXg+sY03KL+36H+P9pb
QNsTu555uhz5DpUodalBtVcdGi82oP1qI3qCmjAQ2oLRSIGB+kE75p52EINO
LCR1svrrgiadac5m5DOKxSWL2iqmvZZpb+BjMx/bmP4OlntdLPV7ZAR6iUCv
DoEyIlDA7cJWlbVi/uTie/sYyIhg3JHLgKdLVgqSiP9r1v0prPtTWfenMf0Z
OLxafJ7DNwVwX18An02FuPJLEW4YFiJsRyFu7y7Eg72FiLN61/xlnWb67cpQ
6lSK6nMlaJDSXySnP5/pz1uS/myowrIwG5XB9Kcy/SlMPxUgNpHplxXgKfU/
jvr/nPr/nGg/l29089gNqtsn5PT/ysVF/2zul8v7fkZ+9Kf3BzH3YfT+O9hv
ICYhnVYmwGvtK/h99waBm9IRtjULMTtz6XnyVwbo9vlMOQocq1DmWkPxr6P4
N6AjoBHKG00YDGvBWLTI/exD5v4Zc5/Qwdx3MPed0GQwvzmMAkZxp5x75rqW
0cBoZs5bOew7WOZ3NVIGZL9XMu9KXd6LuE0M06mWF2gpu33pvbT7y49Rsvg/
kto/se2lJP5Gy14z7SlMeyr2rUxnuyfmaG2/yofr9wW48GMB/H8uRNDWQtza
XojoXYWINS3EsyVpzzxVinw57VVMez3T3sK0d3gXoue9tOcy7TmYvpXNtGdi
/nY6Fu++4YjnyI/lyH/4Qk47hT+Owh9P4Y+n8MfLNwx56oXZu6d/36hf/oHt
X2W/F4ydHB175Yb/zGdxtP1EnP8qGZe/T0XQTxmIMMym7efR9kWR/UYndjbl
KHSqpO3XoI6Zb7ncgM5rjegNbsJwuLhuQnW/DXOP2zAf146FF4xX7Vh808HM
c1TnMgoYJe1y5pntWma7gdHMkd7KCq+dWe+Us97NrPcw6z3FfJ7H7WIqf6RO
8n2/t7vnIe9auKz5sVLRJ7aJxt9o2Svs+uw19n6eAquVacy6+CibtXlw+S4f
3hsLcHlzIQK3FCLUqABROwtwn1l/armkyWfW85j1EqcyVJ4rZdZLmPViOesF
6PfLl7Oeh8mQXCnrM1FZmL+TwaynMuMc8A844B+Kmw9pnz3lAH/AbMdAm0C9
T5BvwRDng/lYm9+ddN3Nb8/JR+Eaa72bbPKjmHRxsoLt5/FwWfOStd5rXFmf
iuCfMxFplIP7e/LxzFL+xj056UVnK1HhXoP6C3VoZdK7mPS+kHdJV8e2Mumt
THoba702LCa3QZPK5GZySOcyCkU7oC1noquY6FpGA4d4ExPeyo6uvY7JFSev
a7uY8G7dMM/n8yy+Jtb8lZV33yZduP9ncpkfJbv8I3lfdXN+idj2SRK7u1fs
7l7DasUbHFydjmOrxRSM87p8nN9QAL+fCnBdUYCb25hx4wLcMynEEwux7/rW
Ps+2DMWOIuN1biVoZsbbvYvQ7VuI/ssFcsbz5YznQB2ZzYxnYvFeGjPOsf6Q
Y/1RkpzZOGb7ETPNFv8FJf6FfIOE+EvQPLT/XRn/HO/Wei9LBmjEo7Ob48FM
Nna75Qlw/SIJPt+m4OqGNIT8komo7bmINSlA3L4lJa1tOYqZ8Ur3ajT41KHN
vx7d1xvRz4yPRIiMz0gZb2HGWzjMW5nxVmac2c1i1vP4WChX7eXMchWzXMto
4NBuYhXfUkuDr6bIi9NDtZ0c3l3Mdmc2sy0Wa6bqn6C54CYuv5/uEHmQ31nS
2Ynm3vCTRKY7ielOZjOfwmY+DUdXCWl3+iYPXj/k49KmAlxjukMMCxC5owB3
WdD9QTNvI9Jdca6M6S5lukuY7mI53YUYDhApnwzJw3RYLtOdg7mYLKY7g4Ob
g/whu7rHr+R0xzPVlPYXlPZESnsipT1RXPmkeeL8G9P9P7/n5/oVnSusaW5g
O4/OHva95rKfO6x4AbcvX8GXtVzAxnTcVGQh2jhXqmOeL+lhc+3KUeJciSqP
ajT61Mopb8DAzSaMyimfjW3B3KNmpryZKW9myluYcg7kLEYuo1C8T1vBVFcz
1bUc2PUc2E2s21qY7jY53R1Md4cu3Tl8TKcAiDm5kSqpDfF/S7OP1MiJMR7N
uL9kjMcz4S/YvieyfU+CxYrXOLAyFUdXClV3/DoXnuvzcfHHfAT8UoBgw3xE
bM9nA1eIR0vad4l2JrzIQSS8lglvYsLbmPAu3yL0SQkvlBOez4TniYTfycbC
/UxoHnCMP+IYfyx2Qfs8gcmmqidS1V9S1V9S1V+KE/Y0cW6/1cffz7iN/BjA
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
Qp3O58wg1JlPSHF5nSzDC3NJ4u7IL1JzLdw2C6zfSNZvY6KzhwH7kDxUrYjb
tY9S4PBlOm59nyU8skx2tMK2ZMHOXIM6wt1sX0q4Swl3KYY9SiTcGsJdTLiL
CHch4S7g4/Oxo/n4cbmS5YQ6lVCnk+0ZfAVZTPeymSLkSqgLQjkecJYHYC73
HmazxJnQ9mjTV+C+rGPFbi1sPm0k3NsW4A5fgNuY5sTknXhYEG4HHWqrC5Sv
WYrWfd5a61I02RNuqli3azkG3EX0euFDuP1KMEkVm3rI59al9zM+c7x85lQF
bqpXBuHOpP/PItzZoQtwz/46cK9bdk71LwJuX76KYLruULruSKZE4iTDpXeS
YPlxKhzXZuD2uix1r03xLNo4lqC7Eq9svGhzCK0jlX5ljH5lin5lmn7lZVAh
4aaoheYTbm0Mk0xPItQpqeLx0ynemRS3LDI+Rx6czmPykRdI+H0xl+2J2QwX
+ffXv7XEk2jRdpSf3SXaAUT7gQ7akRLtWJgwwbD8OAmOTDBuEW3djYcfnQWU
Gw8VV0tQZ11GtMvR7lzBmKVYUi3aZRinV1HQnmbMmgljzIpkrIrhiCPiCXKZ
PU1hN4Usk8zOItrZ9CY5Eu3Muyrav0vHRaP3v0BDQwNMTExgZWWFjz76CGvW
rEFTU9Of/zQRhFlfKd/QRVUKxc/+TMEe0qyH0axH4chyYWJN3k1mCpYGp68y
4bZeGNggnSinfTt52hRMIYOanmjQdUODfleNJAPljunJtD/NDM3rDNOTWZpX
NT1Rzas0NImcB8kkQiolPk2RPkp8JlOubHmDJjeYb8qfwxtzmW6YTbshzI7O
zFdobrqw1iGezk1ywV9y4ZHKhSOSC2feUJLNOFh9LJLN2+TCT+45GounLTbV
qKsBdTZlaHaQXLhdgcE7Ij15Qd86HkAu0LdOP6JvDScXouhXY4uEf0mUwS2N
fjVD4QKpnx2j0n4+V14bzSIXku1/8xogX1dDRCsOSUlJMDAwgK2tLSwtLTEz
MyMr5/05QkJCYGxsjImJCTx//hw+Pj74vXxZdH/rlmknXyBdfwhdfzhdf7Sc
UYkwfS+FyV06bnwtU9oFviydTUv4oi4FasRSoKtI2sa8igRf/JjoBDHReZiH
Waaz809oBaKy1HRWffQEvrkkciWFMymVMSKdJjhDCZVyNmUHcNznZ4bMdNGu
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
c6ZU2vNjvNZWYAlXy6xafRALx08T1GKLXutS4bclAw92ZSP8oLb0TjHSjEtk
wS0Jtl01mpxq0Oa6tBLLeFAj4zXBDm/ATBTBjq1nvK5nvOZIJ+DZ2kvcyq3e
Ms5qmrSyfHEFrEpul1fGqmD/rnJzPwvpCEa0aCL9TCKdugRp268Xy61pkV6y
eacsP50tRJGCtKlE2oJIW2ehRyI9ciMVYy4pDNrJmPRIwLTns1dKbWtrrTPv
CmSgDvYhotTvB9TvBzrFloPNGdwvYS7AGJO+BspXLkumteLQTso8TFtYSSmo
6siA7aIWVt+tFlX1Y8AWV/WVwqpX3nkK2w+fwfmzBLh9k4x7G0RpzZA9OYtN
sg00yDhbSitehmLzClRYifJqTTdq0X6rDj136jHo3aD+2Ylgbd2dRsw8bcDs
swbMJTYwYBPtDI4ciXYR0S4p57Qm2uV0aZV0adUS7SoV7Z8J9t/I9VRx3l0L
dKQEOg57VifihzcE0EphNfPP8wh0/gLQ3tsLELingEAvrbOUc6ZQ1FQ3FTXV
G6/loM1aKaQsgXZKwYubsqi+WzymPWIx4/kUc3ep3d7Mte7LXXt/anfAfdFZ
IYjaHUTtDmauFSy7KwSZ8fcv0NEZYdLnlLqysvTmm9aaaW9tmKu7LxuJ9Fa1
eLoHo7U3BVzcCTBaGcpoHYFr70XjulJH8YtEeHybAp9Nonxy6L7FIqopRiWM
1qXINy1HydVKWrPqJcXUer3qMeQjkJ582ITp0Ca8jCDS0dp6O0Q6rUGU4siV
pTiKq8VNffXeNqN2Ve7i1c5qIl0a/IuRVq75ai8TKbWWYrB1Aem0JUjbEOkb
6wqIdMEC0o91kVbLZi/WTq8xU5DORptVJrpsBdLDCtLOyRTwREzcjsOUewxm
7kRhzovCfS8M8z6yf4baTIfTOYDCHeDOwRkb6LTYSyXgMtlwDnO+hvTyJ5cg
LdT7uERae+dI2yzFieqtIH1HbZagJ2sWnFkVBlOGaiuGakelVO7aRHh9L4ol
P9iZpXRyFM+pdNBRq6WXodCsgupdhWq7GrVqZqtrHUN1PUO1btk8ohzGEdmE
mZgmzMY3YS5ZqazEka1TZkctwVHB+Ux/VsmQXa3c2ZYH5JTrnH8CpGOxdUU8
dq9OWoL0FR2k3Yj0PR2kFzfOiLSxQLr0klIlXzTKEJ1S0hc7pdxIooAnYOLW
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
W/gtaYtAIGmOXBAzWFpibkt77G3piFsUa8KidCbdkc6UJelKWxZbxop0Z61K
T46Wq9+S/mKn9JOtDrJ1ADoHoXOwBhTqIJSzt2HoHCFfR1vVoo5zFjcBnZPQ
edYKOtA5Q8aeI2NnydhZMnaOjD1Pxl6YUO9zcZrMJWMvMVu4RMZeJmMvg+hl
EL3EbOESiF4C0UvMFi6C6MWF9YxVXnJQZgkTLjqd0sdMof2qepXNRehj6oxC
4epR1zf2vfnmmxITEyN37959+CRV39z4OfHYduXejJcEfYEEffmQSuXr7znl
Daa4e4jPA97u7vFH8h4onkSnQdEHvPxREKiFoggQjEKxQWolkoKZFKBUlI4y
UCa3ZaEclBvkdF/tLg5YlZKAFSkNWJYy/yUp978jFf6LUul/W6pQtf+C1KBa
/1tSF3CL3PSfh0n/eeUlBJYN/jddIidZbpEmlk1+N1x6RJr9biiL68on6Pyu
SYuvekG0ld9b/a+LLuCG6AJR0E3RKwqeF33IvBhCFd0SQ9gtMYYrWhBjBIpc
eERMUbfZb1P0bWmLWRRz7KJY4u6IJeGOtCcuSUfSkliTl6QzdVm60lekK3NV
bNlr7uvc9iLMJSX7SMl+WHTQ5x2k5AApOQiLg7A4xMnWMBPWEXr9KEk5Bovj
bWplJ2HxLP1+ChanYXGGtDxHWs6SlrOk5dy427EvywXi8gJxeZGefxEeL8Lj
RXr+RXi8CI8X6PkX4PECPF4AugsL6nPMAuFZNAGQw6zrB0bb9btSNf2B/OOn
xOXjGnGXL1+WZ599VmnysjGbG30tyve1V3jfdU9YScrnScptMLldSUomqbuY
oL4Jl78mIt/2UZ/1KDyegMVTcHgG+cFhIIyFoHC4iwxWt4sL4VQslBaPUlAa
SkcZKAtloxy2yUP5qCDEHaGfk9LgVSkLWpHyoGWpQJVBS1Ll0h2pDr4jNcGL
UovqgpUPDNazfJTlgjTcE3zyyxZpDLolTZpAk+UTLOel5T65EOVnKzjqQmBe
B4ufEX3YgughUR+h6LYYIpVnM0QtytNijF4UY8wdMcbeERNqi1+StoQlMScu
iyVpWdqTV6Q9dUU60lbEmr4qnRmr0pW1Bpp3169j9hQ6pZec7CUn7fDZR072
kZP95KQDPh108QFycpCcHITPIfgcZi46QicfJSvHyMpxq1rts90wSjefhs9p
+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
EXgQhQcxeBCLB/F4kIgHyXiQggdp1D+D+mcxLrLVtxY9InkW5XtO87GgAAsK
sKAQCwqxoAgLirGgGAtKsKAEC0qxoAwLyrCgHAvKsaACCyqxoBILqrCgCguq
saAGC2qxoBYL6rCgbtrpfmtNLaWtpcQ1s8pVCe6Kyvi9mPUFlDwXtzK5i8cP
3pI3NqX27vmhB7m1jXHwKnn1Blm1J8+d99+R49T3JPU9RX1PU98z1NeH+vpR
2wBqG0Rtg6ltKLUNR5HUN4r6xlDfOOqbQH0TqW8y9U2lvulmdS8zKW4Wxc2m
uNkUN4fi5lDcXIqbR3HzKG4+xc2nuAUUt5DiFlLcIlRMgYspcAkFLqXAZRS4
bMy9z09JGVUqo1rliqhcORUsRcX8ns+6HG7PxIC0SVc139qUYqozgifk54TK
SzTrnYTJLsJ+D0GyD4APAO/bZc4ntYf1p2aB1CuYeoVQrzDqFU69IqlXNPWK
oV5x1CuBeiWBY3K7ukNp1CuNeqVTr3TqlUG9MqlXJvXKol7ZKIea5VCzXIfT
/QaEXEqUS4lyXe+Ky5tQ3kWex+HnU4Y8TbkoB2VOKrnL0467yrN3U8rzkmv5
tDzP+N7G+H6F8f0qJXqNEu2iRLspzy8Z179iXP8nzL0Db+/C2nuwdgLOTjUq
u6z8e1RiqEVch7oHiZ1O9+eCUznsVA47DVSSHZygpAwo53Qp0JICLanDqlJQ
MkpyXRFKHFb2NIFlPIpzrYt1rYsZvnes+zalBjtcy6/Li4yzl5jDbWec7aTX
vAEeb3H8ezn2/Rz7QY7dk+M+zHEfhZPjcOIFI97w4QMffvARAB9B8BECH2HU
I0KrRyR8RMFHFHxEwUe0IhiJhpEoRb0UJtqu7FoUy0gUYVcOOtyunA6EsQxF
ISjYzqZBdvVMz3OD49noY5RfeehqqFx9Qd7A9bdI8r2kzK9ImIMkyzu4/S5H
fYyjPslRn+ZofThSP4t6lIEd7FWgVdnjAJb+yA/5WlntY1WcOsPSG51Gp5AX
OvE/OoaNvn3OU+NiP04dwClPRvNhbcb1iBwxKtu/y/Iwrh1Cvpu+B0c2uLf/
pj/LmrJ8zLVqyzr46kGKaF+c/zCPc1JZeimrHvuUEfW7PJ66S/cf1ZsbHKn6
hc2Pfuy+957oGWX91za422sbrPvZBuu++sB1j35sHU/zKT64Kuvax6c2ONSN
9u+nD3ywj6975iG322jdg4/t8Y+t047vN010vRXaZfPjGxzURtX48kMewMNu
979XkI+vu/8bLN3rtQ+ZP7Xu9Jb/Q0V5Wlm+q6zRWtoX13fT9QXDkepa18Z/
+/C/33X9eOAHOdU33mkP/hnR6XRy8OBB19tCfX19XW8R3aM9wgM+P6c9wl9+
+vNs126+deuWfPe735Xp6WnXx5mee+456evre1UriPJGaOVtqLt37+YvdVlV
VfUJc+7/JNRzH9+BB+ymewcmJyflm9/8pszPz7vWvPTSSxIeHv5L1x+f+EiL
dnDf2+Bpd2gP6HA45Nvf/rYsLCy41uzbt085hH3aXe7/EIL2aN/f+Lncezgx
MfGJPQwLC3Pb8ID3jGuP/YMNnvY3az8zM3N/7e/3d4O3A/+Gvw94+lc1gJTK
KHcMDQ0Vf39/14NmftKgDZ7HqUbVfwvy3//++9//P/0uf/BfPeBmWA==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Xu", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"X", ",", "u"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Xv", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"X", ",", "v"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nuDirection", "=", 
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"Xu", ",", "Xv"}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nu", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"nuDirection", ".", "nuDirection"}], "]"}]}], ")"}], "*", 
    "nuDirection"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"P", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "-", 
    RowBox[{"Outer", "[", 
     RowBox[{"Times", ",", "nu", ",", "nu"}], "]"}]}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"LC", "=", 
  RowBox[{
   RowBox[{"vol", "*", 
    RowBox[{"LeviCivitaTensor", "[", "2", "]"}]}], "//", 
   "Normal"}]}]}], "Input",
 CellChangeTimes->{{3.667110193327025*^9, 3.667110226677516*^9}, {
  3.667111895578683*^9, 3.667111907536353*^9}, {3.669448131536265*^9, 
  3.6694481638586483`*^9}, {3.67012495664003*^9, 3.670124971164516*^9}, {
  3.670324956966456*^9, 3.670324959310207*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "u", "]"}]}], ",", "0", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Cos", "[", "u", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6671103244618177`*^9, {3.6671105651360197`*^9, 3.667110584371592*^9}, {
   3.667111903513586*^9, 3.667111908356413*^9}, 3.669448116550117*^9, 
   3.66944816471906*^9, 3.669452978608304*^9, 3.669453386359667*^9, 
   3.66953157988474*^9, 3.669532761498455*^9, 3.669533842831324*^9, 
   3.669534382557371*^9, 3.669547855377412*^9, 3.670124174229093*^9, 
   3.670124273858685*^9, 3.670124357440392*^9, 3.67012440059665*^9, 
   3.670124610057262*^9, 3.6701249718384438`*^9, 3.670125216902302*^9, 
   3.6701252607237062`*^9, {3.670125341737752*^9, 3.670125368885466*^9}, 
   3.670126332212801*^9, 3.670127032266728*^9, 3.670131091384749*^9, 
   3.670227774270937*^9, 3.670310057449296*^9, 3.670835269934629*^9, 
   3.670835659877557*^9, 3.6708402086736107`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"Cos", "[", "u", "]"}], " ", 
    RowBox[{"Sin", "[", "v", "]"}]}], ",", 
   FractionBox[
    RowBox[{"Cos", "[", "v", "]"}], "2"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"Sin", "[", "u", "]"}], " ", 
    RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6671103244618177`*^9, {3.6671105651360197`*^9, 3.667110584371592*^9}, {
   3.667111903513586*^9, 3.667111908356413*^9}, 3.669448116550117*^9, 
   3.66944816471906*^9, 3.669452978608304*^9, 3.669453386359667*^9, 
   3.66953157988474*^9, 3.669532761498455*^9, 3.669533842831324*^9, 
   3.669534382557371*^9, 3.669547855377412*^9, 3.670124174229093*^9, 
   3.670124273858685*^9, 3.670124357440392*^9, 3.67012440059665*^9, 
   3.670124610057262*^9, 3.6701249718384438`*^9, 3.670125216902302*^9, 
   3.6701252607237062`*^9, {3.670125341737752*^9, 3.670125368885466*^9}, 
   3.670126332212801*^9, 3.670127032266728*^9, 3.670131091384749*^9, 
   3.670227774270937*^9, 3.670310057449296*^9, 3.670835269934629*^9, 
   3.670835659877557*^9, 3.6708402086842413`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Cos", "[", "v", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], 
     SqrtBox[
      RowBox[{"17", "+", 
       RowBox[{"8", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "v", "]"}]}], 
     SqrtBox[
      RowBox[{"17", "+", 
       RowBox[{"8", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "v", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "u", "]"}]}], 
     SqrtBox[
      RowBox[{"17", "+", 
       RowBox[{"8", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "-", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6671103244618177`*^9, {3.6671105651360197`*^9, 3.667110584371592*^9}, {
   3.667111903513586*^9, 3.667111908356413*^9}, 3.669448116550117*^9, 
   3.66944816471906*^9, 3.669452978608304*^9, 3.669453386359667*^9, 
   3.66953157988474*^9, 3.669532761498455*^9, 3.669533842831324*^9, 
   3.669534382557371*^9, 3.669547855377412*^9, 3.670124174229093*^9, 
   3.670124273858685*^9, 3.670124357440392*^9, 3.67012440059665*^9, 
   3.670124610057262*^9, 3.6701249718384438`*^9, 3.670125216902302*^9, 
   3.6701252607237062`*^9, {3.670125341737752*^9, 3.670125368885466*^9}, 
   3.670126332212801*^9, 3.670127032266728*^9, 3.670131091384749*^9, 
   3.670227774270937*^9, 3.670310057449296*^9, 3.670835269934629*^9, 
   3.670835659877557*^9, 3.670840208821018*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "2"], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "u", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", "u", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "2"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", "u", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "u", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6671103244618177`*^9, {3.6671105651360197`*^9, 3.667110584371592*^9}, {
   3.667111903513586*^9, 3.667111908356413*^9}, 3.669448116550117*^9, 
   3.66944816471906*^9, 3.669452978608304*^9, 3.669453386359667*^9, 
   3.66953157988474*^9, 3.669532761498455*^9, 3.669533842831324*^9, 
   3.669534382557371*^9, 3.669547855377412*^9, 3.670124174229093*^9, 
   3.670124273858685*^9, 3.670124357440392*^9, 3.67012440059665*^9, 
   3.670124610057262*^9, 3.6701249718384438`*^9, 3.670125216902302*^9, 
   3.6701252607237062`*^9, {3.670125341737752*^9, 3.670125368885466*^9}, 
   3.670126332212801*^9, 3.670127032266728*^9, 3.670131091384749*^9, 
   3.670227774270937*^9, 3.670310057449296*^9, 3.670835269934629*^9, 
   3.670835659877557*^9, 3.670840208927825*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "-", 
        RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6671103244618177`*^9, {3.6671105651360197`*^9, 3.667110584371592*^9}, {
   3.667111903513586*^9, 3.667111908356413*^9}, 3.669448116550117*^9, 
   3.66944816471906*^9, 3.669452978608304*^9, 3.669453386359667*^9, 
   3.66953157988474*^9, 3.669532761498455*^9, 3.669533842831324*^9, 
   3.669534382557371*^9, 3.669547855377412*^9, 3.670124174229093*^9, 
   3.670124273858685*^9, 3.670124357440392*^9, 3.67012440059665*^9, 
   3.670124610057262*^9, 3.6701249718384438`*^9, 3.670125216902302*^9, 
   3.6701252607237062`*^9, {3.670125341737752*^9, 3.670125368885466*^9}, 
   3.670126332212801*^9, 3.670127032266728*^9, 3.670131091384749*^9, 
   3.670227774270937*^9, 3.670310057449296*^9, 3.670835269934629*^9, 
   3.670835659877557*^9, 3.670840208960327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HVec", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"LBeltrami0", "[", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "u", ",", "v", ",", "g"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "=", 
  RowBox[{
   RowBox[{"HVec", ".", "nu"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.670234062523982*^9, 3.670234063348482*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], "+", 
  FractionBox["8", 
   RowBox[{"4", "+", 
    RowBox[{"Cos", "[", "v", "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.670124256709384*^9, 3.670124274079047*^9}, 
   3.67012435760814*^9, 3.670124400699668*^9, 3.6701246119809313`*^9, 
   3.670125221195643*^9, 3.67012526118788*^9, {3.6701253437519007`*^9, 
   3.6701253693841333`*^9}, 3.670126332280748*^9, 3.6701270324909477`*^9, 
   3.670131091613234*^9, 3.6702278112245502`*^9, 3.6702340639186163`*^9, 
   3.67031005766728*^9, 3.670835270387453*^9, 3.670835660234118*^9, 
   3.670840209057539*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xuu", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"Xu", ",", "u"}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xuv", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"Xu", ",", "v"}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xvv", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"Xv", ",", "v"}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"II", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nu", ".", "Xuu"}], ",", 
       RowBox[{"nu", ".", "Xuv"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nu", ".", "Xuv"}], ",", 
       RowBox[{"nu", ".", "Xvv"}]}], "}"}]}], "}"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"S", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Inverse", "[", "g", "]"}], ".", "II"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tr", "[", "S", "]"}], "+", "H"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"K", "=", 
  RowBox[{
   RowBox[{"Det", "[", "S", "]"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GaussCurvFromMetric", "[", 
   RowBox[{"u", ",", "v", ",", "g"}], "]"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.670127379352765*^9, 3.670127405234603*^9}, {
  3.670234038850443*^9, 3.670234049535101*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"8", "-", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "17"}], "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"17", "+", 
         RowBox[{"8", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}]], ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"4", "+", 
       RowBox[{"Cos", "[", "v", "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"17", "+", 
         RowBox[{"8", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.670124441448312*^9, 3.670124612035972*^9, 3.6701252214480963`*^9, 
   3.670125261221014*^9, {3.6701253438537827`*^9, 3.670125369424724*^9}, 
   3.670126332316923*^9, 3.670127032551478*^9, 3.670127406001552*^9, 
   3.670131091663965*^9, 3.670227777247712*^9, 3.670227813319689*^9, {
   3.670234039663113*^9, 3.670234050025365*^9}, 3.670310057727194*^9, 
   3.6708352704769163`*^9, 3.670835660331026*^9, 3.670840209149248*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "v", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "17"}], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "+", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", "v", "]"}]}], "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], 
      SqrtBox[
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.670124441448312*^9, 3.670124612035972*^9, 3.6701252214480963`*^9, 
   3.670125261221014*^9, {3.6701253438537827`*^9, 3.670125369424724*^9}, 
   3.670126332316923*^9, 3.670127032551478*^9, 3.670127406001552*^9, 
   3.670131091663965*^9, 3.670227777247712*^9, 3.670227813319689*^9, {
   3.670234039663113*^9, 3.670234050025365*^9}, 3.670310057727194*^9, 
   3.6708352704769163`*^9, 3.670835660331026*^9, 3.670840209184443*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "4"}], "+", 
  FractionBox["8", 
   RowBox[{"4", "+", 
    RowBox[{"Cos", "[", "v", "]"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], 
   SqrtBox[
    RowBox[{"17", "+", 
     RowBox[{"8", " ", 
      RowBox[{"Cos", "[", "v", "]"}]}], "-", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "v", "]"}], "2"]}]]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "17"}], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"17", "+", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], "-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{
  3.670124441448312*^9, 3.670124612035972*^9, 3.6701252214480963`*^9, 
   3.670125261221014*^9, {3.6701253438537827`*^9, 3.670125369424724*^9}, 
   3.670126332316923*^9, 3.670127032551478*^9, 3.670127406001552*^9, 
   3.670131091663965*^9, 3.670227777247712*^9, 3.670227813319689*^9, {
   3.670234039663113*^9, 3.670234050025365*^9}, 3.670310057727194*^9, 
   3.6708352704769163`*^9, 3.670835660331026*^9, 3.670840209377164*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "v", "]"}]}], 
  RowBox[{"4", "+", 
   RowBox[{"Cos", "[", "v", "]"}]}]]], "Output",
 CellChangeTimes->{
  3.670124441448312*^9, 3.670124612035972*^9, 3.6701252214480963`*^9, 
   3.670125261221014*^9, {3.6701253438537827`*^9, 3.670125369424724*^9}, 
   3.670126332316923*^9, 3.670127032551478*^9, 3.670127406001552*^9, 
   3.670131091663965*^9, 3.670227777247712*^9, 3.670227813319689*^9, {
   3.670234039663113*^9, 3.670234050025365*^9}, 3.670310057727194*^9, 
   3.6708352704769163`*^9, 3.670835660331026*^9, 3.670840209406927*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "v", "]"}]}], 
  RowBox[{"4", "+", 
   RowBox[{"Cos", "[", "v", "]"}]}]]], "Output",
 CellChangeTimes->{
  3.670124441448312*^9, 3.670124612035972*^9, 3.6701252214480963`*^9, 
   3.670125261221014*^9, {3.6701253438537827`*^9, 3.670125369424724*^9}, 
   3.670126332316923*^9, 3.670127032551478*^9, 3.670127406001552*^9, 
   3.670131091663965*^9, 3.670227777247712*^9, 3.670227813319689*^9, {
   3.670234039663113*^9, 3.670234050025365*^9}, 3.670310057727194*^9, 
   3.6708352704769163`*^9, 3.670835660331026*^9, 3.670840209407859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"S2R3", "=", 
  RowBox[{
   RowBox[{"GlobalTensorFromPara", "[", 
    RowBox[{
     RowBox[{"S", ".", "S", ".", "gInv"}], ",", "X", ",", "u", ",", "v"}], 
    "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"S2XYZP", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"S2R3", "//.", "repRulesPlus"}], ")"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"S2XYZM", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"S2R3", "//.", "repRulesMinus"}], ")"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2XYZP", "-", "S2XYZM"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.670840050537158*^9, 3.670840150680962*^9}, {
  3.6709250391325407`*^9, 3.6709250907245197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "17"}], "-", 
             RowBox[{"8", " ", 
              RowBox[{"Cos", "[", "v", "]"}]}], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "u", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "v", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ")"}], 
           "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "+", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", "v", "]"}]}], "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "3"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "353"}], "+", 
         RowBox[{"8628", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}], "-", 
         RowBox[{"4422", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "4"]}], "+", 
         RowBox[{"244", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "6"]}], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "8"], "+", 
         RowBox[{"8", " ", 
          RowBox[{"Cos", "[", "v", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "34"}], "+", 
            RowBox[{"967", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], "-", 
            RowBox[{"168", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "4"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "6"]}]}], ")"}]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"17", "+", 
         RowBox[{"8", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "3"]]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "353"}], "+", 
         RowBox[{"8628", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}], "-", 
         RowBox[{"4422", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "4"]}], "+", 
         RowBox[{"244", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "6"]}], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "8"], "+", 
         RowBox[{"8", " ", 
          RowBox[{"Cos", "[", "v", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "34"}], "+", 
            RowBox[{"967", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], "-", 
            RowBox[{"168", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "4"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "6"]}]}], ")"}]}]}], ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"17", "+", 
         RowBox[{"8", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "3"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"17", "+", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}]]}], ",", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "u", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "17"}], "-", 
             RowBox[{"8", " ", 
              RowBox[{"Cos", "[", "v", "]"}]}], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "+", 
             RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "v", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ")"}], 
           "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "+", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", "v", "]"}]}], "-", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "3"]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.670840080066844*^9, 3.67084011514323*^9, 3.670840152017652*^9, 
   3.670840209904813*^9, {3.67092505872369*^9, 3.6709250913688507`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["y", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"17", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{"8", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"32", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}], ")"}]}]}], ")"}], "2"], " ", 
          SuperscriptBox["z", "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"]}]], ",", 
     FractionBox[
      RowBox[{"16", " ", "x", " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}], 
      RowBox[{"17", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}], "+", 
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}]}]], ",", 
     FractionBox[
      RowBox[{"16", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "353"}], "+", 
         RowBox[{"34512", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"70752", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         RowBox[{"15616", " ", 
          SuperscriptBox["y", "6"]}], "-", 
         RowBox[{"256", " ", 
          SuperscriptBox["y", "8"]}], "+", 
         RowBox[{"16", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "17"}], "+", 
            RowBox[{"1934", " ", 
             SuperscriptBox["y", "2"]}], "-", 
            RowBox[{"1344", " ", 
             SuperscriptBox["y", "4"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox["y", "6"]}]}], ")"}]}]}], ")"}], " ", "z"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"16", " ", "x", " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}], 
      RowBox[{"17", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}], "+", 
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}]}]], ",", 
     RowBox[{"4", "-", 
      RowBox[{"16", " ", 
       SuperscriptBox["y", "2"]}]}], ",", 
     FractionBox[
      RowBox[{"16", " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}]}], ")"}], " ", "z"}], 
      RowBox[{"17", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}], "+", 
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"16", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "353"}], "+", 
         RowBox[{"34512", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"70752", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         RowBox[{"15616", " ", 
          SuperscriptBox["y", "6"]}], "-", 
         RowBox[{"256", " ", 
          SuperscriptBox["y", "8"]}], "+", 
         RowBox[{"16", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "17"}], "+", 
            RowBox[{"1934", " ", 
             SuperscriptBox["y", "2"]}], "-", 
            RowBox[{"1344", " ", 
             SuperscriptBox["y", "4"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox["y", "6"]}]}], ")"}]}]}], ")"}], " ", "z"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"]}]], ",", 
     FractionBox[
      RowBox[{"16", " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}]}], ")"}], " ", "z"}], 
      RowBox[{"17", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}], "+", 
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}]}]], ",", 
     FractionBox[
      RowBox[{"16", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"32", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}], ")"}]}]}], ")"}], "2"]}], "+", 
         
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"4", "+", 
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"17", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{"8", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "2"], " ", 
          SuperscriptBox["z", "2"]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.670840080066844*^9, 3.67084011514323*^9, 3.670840152017652*^9, 
   3.670840209904813*^9, {3.67092505872369*^9, 3.670925091375766*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"16", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["x", "2"], " ", 
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8177"}], "+", 
             RowBox[{"64", " ", 
              SuperscriptBox["y", "6"]}], "+", 
             RowBox[{"7448", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]]}], "+", 
             RowBox[{
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"17292", "-", 
                RowBox[{"5312", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}], "+", 
             RowBox[{"48", " ", 
              SuperscriptBox["y", "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "81"}], "+", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"353", "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["y", "4"]}], "-", 
             RowBox[{"272", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "49"}], "+", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}]}], ")"}], " ", 
           
           SuperscriptBox["z", "2"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "17"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["y", "2"]}], "+", 
           RowBox[{"8", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"]}], ")"}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"16", " ", "x", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "17"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"8", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["y", "2"]}]}]]}]}]]}], ",", 
     FractionBox[
      RowBox[{"16", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "353"}], "+", 
         RowBox[{"34512", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"70752", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         RowBox[{"15616", " ", 
          SuperscriptBox["y", "6"]}], "-", 
         RowBox[{"256", " ", 
          SuperscriptBox["y", "8"]}], "-", 
         RowBox[{"16", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "17"}], "+", 
            RowBox[{"1934", " ", 
             SuperscriptBox["y", "2"]}], "-", 
            RowBox[{"1344", " ", 
             SuperscriptBox["y", "4"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox["y", "6"]}]}], ")"}]}]}], ")"}], " ", "z"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "-", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"16", " ", "x", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "17"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"8", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["y", "2"]}]}]]}]}]]}], ",", 
     RowBox[{"4", "-", 
      RowBox[{"16", " ", 
       SuperscriptBox["y", "2"]}]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"16", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], " ", "z"}], 
       RowBox[{
        RowBox[{"-", "17"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"8", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["y", "2"]}]}]]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"16", " ", "x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "353"}], "+", 
         RowBox[{"34512", " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"70752", " ", 
          SuperscriptBox["y", "4"]}], "+", 
         RowBox[{"15616", " ", 
          SuperscriptBox["y", "6"]}], "-", 
         RowBox[{"256", " ", 
          SuperscriptBox["y", "8"]}], "-", 
         RowBox[{"16", " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "17"}], "+", 
            RowBox[{"1934", " ", 
             SuperscriptBox["y", "2"]}], "-", 
            RowBox[{"1344", " ", 
             SuperscriptBox["y", "4"]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox["y", "6"]}]}], ")"}]}]}], ")"}], " ", "z"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"17", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "-", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"16", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}]}], ")"}], " ", "z"}], 
       RowBox[{
        RowBox[{"-", "17"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"8", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["y", "2"]}]}]]}]}]]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"16", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"353", "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["y", "4"]}], "-", 
             RowBox[{"272", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "49"}], "+", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8177"}], "+", 
             RowBox[{"64", " ", 
              SuperscriptBox["y", "6"]}], "+", 
             RowBox[{"7448", " ", 
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["y", "2"]}]}]]}], "+", 
             RowBox[{
              SuperscriptBox["y", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"17292", "-", 
                RowBox[{"5312", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}], "+", 
             RowBox[{"48", " ", 
              SuperscriptBox["y", "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "81"}], "+", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{"1", "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["y", "2"]}]}]]}]}], ")"}]}]}], ")"}], " ", 
           
           SuperscriptBox["z", "2"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "17"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["y", "2"]}], "+", 
           RowBox[{"8", " ", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["y", "2"]}]}]]}]}], ")"}], "3"]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670840080066844*^9, 3.67084011514323*^9, 3.670840152017652*^9, 
   3.670840209904813*^9, {3.67092505872369*^9, 3.670925091384482*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"512", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"], " ", 
           SuperscriptBox["y", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"15", "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["y", "2"]}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"17", "-", 
             RowBox[{"72", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["y", "4"]}]}], ")"}], " ", 
           SuperscriptBox["z", "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"15", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], "4"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"128", " ", "x", " ", "y", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}], 
       RowBox[{"15", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"512", " ", "x", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "17"}], "+", 
          RowBox[{"522", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"224", " ", 
           SuperscriptBox["y", "4"]}], "+", 
          RowBox[{"32", " ", 
           SuperscriptBox["y", "6"]}]}], ")"}], " ", "z"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"15", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], "4"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"128", " ", "x", " ", "y", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}], 
       RowBox[{"15", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}]}]]}], ",", "0", ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"128", " ", "y", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", "z"}], 
       RowBox[{"15", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"512", " ", "x", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "17"}], "+", 
          RowBox[{"522", " ", 
           SuperscriptBox["y", "2"]}], "+", 
          RowBox[{"224", " ", 
           SuperscriptBox["y", "4"]}], "+", 
          RowBox[{"32", " ", 
           SuperscriptBox["y", "6"]}]}], ")"}], " ", "z"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"15", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], "4"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"128", " ", "y", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", "z"}], 
       RowBox[{"15", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["y", "2"]}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"512", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"17", "-", 
             RowBox[{"72", " ", 
              SuperscriptBox["y", "2"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["y", "4"]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["y", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"15", "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["y", "2"]}]}], ")"}], "2"], " ", 
           SuperscriptBox["z", "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"15", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}], ")"}], "4"]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.670840080066844*^9, 3.67084011514323*^9, 3.670840152017652*^9, 
   3.670840209904813*^9, {3.67092505872369*^9, 3.670925092100155*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ".", "gInv"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"p", "=", 
    RowBox[{
     RowBox[{"p", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"(", 
        RowBox[{"p", ".", "g", ".", "p"}], ")"}], "]"}]}], "//", 
     "FullSimplify"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", ".", "g", ".", "p"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"rotp2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Rot1", "[", 
     RowBox[{
      RowBox[{"p", ".", "g"}], ",", "u", ",", "v", ",", "g"}], "]"}], "^", 
    "2"}], "//", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"divp2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ExCoD1", "[", 
     RowBox[{
      RowBox[{"p", ".", "g"}], ",", "u", ",", "v", ",", "g"}], "]"}], "^", 
    "2"}], "//", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"hp", "=", 
  RowBox[{
   RowBox[{"gInv", ".", 
    RowBox[{"Hodge1", "[", 
     RowBox[{
      RowBox[{"p", ".", "g"}], ",", "g"}], "]"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"rothp2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Rot1", "[", 
     RowBox[{
      RowBox[{"hp", ".", "g"}], ",", "u", ",", "v", ",", "g"}], "]"}], "^", 
    "2"}], "//", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"divhp2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ExCoD1", "[", 
     RowBox[{
      RowBox[{"hp", ".", "g"}], ",", "u", ",", "v", ",", "g"}], "]"}], "^", 
    "2"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.670835286066093*^9, 3.670835359913402*^9}, {
   3.670835392154504*^9, 3.670835683071059*^9}, {3.670835734784691*^9, 
   3.670835736225556*^9}, {3.6708357977721987`*^9, 3.670835800347019*^9}, {
   3.670835893953718*^9, 3.670835894257206*^9}, {3.670836109161819*^9, 
   3.670836117620112*^9}, {3.670836852800377*^9, 3.6708368541190968`*^9}, {
   3.670837571064283*^9, 3.6708375989183207`*^9}, {3.670837635908242*^9, 
   3.670837637099208*^9}, {3.6708377052014227`*^9, 3.670837748949267*^9}, {
   3.6708378900030127`*^9, 3.6708380058681717`*^9}, {3.6708380466509237`*^9, 
   3.670838057204145*^9}, {3.670839091798295*^9, 3.670839096350733*^9}, 
   3.670839157481213*^9, {3.6708391948804417`*^9, 3.6708393015652113`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["4", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.670840211014482*^9}],

Cell[BoxData[
 FractionBox["4", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.67084021101584*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.670840211016968*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.670840211017811*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["4", 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", "v", "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.670840211040324*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.6708402110410843`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.670835329647122*^9, 3.670835360579577*^9}, {
   3.670835450317544*^9, 3.670835470409587*^9}, {3.670835546194696*^9, 
   3.6708355948746443`*^9}, {3.670835629398151*^9, 3.6708356844883413`*^9}, 
   3.67083574235786*^9, 3.6708358010463133`*^9, 3.67083589549371*^9, {
   3.670836112935693*^9, 3.6708361180157433`*^9}, 3.670836854919327*^9, {
   3.670837590463825*^9, 3.6708375998991528`*^9}, 3.670837637969213*^9, {
   3.6708377430048428`*^9, 3.670837751390926*^9}, {3.670837893754856*^9, 
   3.670837953085438*^9}, 3.670838008553499*^9, {3.670838049644329*^9, 
   3.6708380581361837`*^9}, 3.670839097417741*^9, 3.670839224210387*^9, {
   3.670839286038884*^9, 3.670839302186226*^9}, 3.6708402110416403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"q", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "*", "p"}], "+", 
    RowBox[{"B", "*", "hp"}]}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"rotq2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Rot1", "[", 
     RowBox[{
      RowBox[{"q", ".", "g"}], ",", "u", ",", "v", ",", "g"}], "]"}], "^", 
    "2"}], "//", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"divq2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ExCoD1", "[", 
     RowBox[{
      RowBox[{"q", ".", "g"}], ",", "u", ",", "v", ",", "g"}], "]"}], "^", 
    "2"}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.6708393287800198`*^9, 3.67083948976406*^9}, {
  3.670839520060237*^9, 3.670839573434821*^9}, {3.670839611138826*^9, 
  3.670839611359272*^9}, {3.6708396441761847`*^9, 3.670839646070265*^9}, {
  3.6708396778902817`*^9, 3.670839678896061*^9}, {3.670839716867593*^9, 
  3.6708397212678957`*^9}, {3.670839927416338*^9, 3.6708399276565332`*^9}, {
  3.6709183956184807`*^9, 3.670918444160948*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"4", " ", "A"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"]], ",", 
   FractionBox[
    RowBox[{"4", " ", "B"}], 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", "v", "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.670839392843369*^9, 3.670839410968758*^9}, {
   3.6708394786865463`*^9, 3.670839491040949*^9}, {3.670839523450694*^9, 
   3.670839575124605*^9}, 3.670839613189973*^9, 3.670839647160727*^9, 
   3.6708396802055197`*^9, 3.6708397221541033`*^9, 3.670839928361032*^9, 
   3.670840211066584*^9, 3.670918397892929*^9, 3.670918450166521*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.670839392843369*^9, 3.670839410968758*^9}, {
   3.6708394786865463`*^9, 3.670839491040949*^9}, {3.670839523450694*^9, 
   3.670839575124605*^9}, 3.670839613189973*^9, 3.670839647160727*^9, 
   3.6708396802055197`*^9, 3.6708397221541033`*^9, 3.670839928361032*^9, 
   3.670840211066584*^9, 3.670918397892929*^9, 3.670918450168432*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.670839392843369*^9, 3.670839410968758*^9}, {
   3.6708394786865463`*^9, 3.670839491040949*^9}, {3.670839523450694*^9, 
   3.670839575124605*^9}, 3.670839613189973*^9, 3.670839647160727*^9, 
   3.6708396802055197`*^9, 3.6708397221541033`*^9, 3.670839928361032*^9, 
   3.670840211066584*^9, 3.670918397892929*^9, 3.6709184502232018`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n2Sp", "=", 
  RowBox[{
   RowBox[{"S", ".", "p", ".", "g", ".", "S", ".", "p"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"n2Shp", "=", 
  RowBox[{
   RowBox[{"S", ".", "hp", ".", "g", ".", "S", ".", "hp"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"n2Sq", "=", 
  RowBox[{
   RowBox[{"S", ".", "q", ".", "g", ".", "S", ".", "q"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"n2Sp", "*", "vol"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"n2Shp", "*", "vol"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"n2Sq", "*", "vol"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670839735161215*^9, 3.670839894519002*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"16", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "17"}], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ")"}], "2"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"17", "+", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], "-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{
  3.6708397621581078`*^9, {3.670839812886366*^9, 3.670839842560103*^9}, {
   3.670839874018771*^9, 3.670839895878162*^9}, 3.670839931131153*^9, 
   3.670840211133974*^9}],

Cell[BoxData[
 FractionBox["16", 
  RowBox[{"17", "+", 
   RowBox[{"8", " ", 
    RowBox[{"Cos", "[", "v", "]"}]}], "-", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "v", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.6708397621581078`*^9, {3.670839812886366*^9, 3.670839842560103*^9}, {
   3.670839874018771*^9, 3.670839895878162*^9}, 3.670839931131153*^9, 
   3.6708402111381893`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "17"}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "2"], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "v", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "17"}], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}]}]}], ")"}], 
        "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], "2"]]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"17", "+", 
     RowBox[{"8", " ", 
      RowBox[{"Cos", "[", "v", "]"}]}], "-", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "v", "]"}], "2"]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{
  3.6708397621581078`*^9, {3.670839812886366*^9, 3.670839842560103*^9}, {
   3.670839874018771*^9, 3.670839895878162*^9}, 3.670839931131153*^9, 
   3.670840211223271*^9}],

Cell[BoxData["1.6309254078639794`"], "Output",
 CellChangeTimes->{
  3.6708397621581078`*^9, {3.670839812886366*^9, 3.670839842560103*^9}, {
   3.670839874018771*^9, 3.670839895878162*^9}, 3.670839931131153*^9, 
   3.670840211254683*^9}],

Cell[BoxData["40.77313437647933`"], "Output",
 CellChangeTimes->{
  3.6708397621581078`*^9, {3.670839812886366*^9, 3.670839842560103*^9}, {
   3.670839874018771*^9, 3.670839895878162*^9}, 3.670839931131153*^9, 
   3.670840211255541*^9}],

Cell[BoxData["11.824208932181367`"], "Output",
 CellChangeTimes->{
  3.6708397621581078`*^9, {3.670839812886366*^9, 3.670839842560103*^9}, {
   3.670839874018771*^9, 3.670839895878162*^9}, 3.670839931131153*^9, 
   3.670840211277213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"qR3", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"GlobalVecFromPara", "[", 
     RowBox[{"q", ",", "X", ",", "u", ",", "v"}], "]"}], "//", "Simplify"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"qXYZP", "=", 
  RowBox[{
   RowBox[{"qR3", "//.", "repRulesPlus"}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"qXYZM", "=", 
  RowBox[{
   RowBox[{"qR3", "//.", "repRulesMinus"}], "//", 
   "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.670839944818145*^9, 3.6708399785490713`*^9}, {
  3.670840024503338*^9, 3.670840044446027*^9}, {3.6708402492880173`*^9, 
  3.670840279990985*^9}, {3.6709192832982283`*^9, 3.670919300445751*^9}, {
  3.6709215140972757`*^9, 3.670921531286953*^9}, {3.670924971804521*^9, 
  3.6709250007807293`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"A", " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], "+", 
        RowBox[{"B", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ")"}]}], 
     RowBox[{"4", "+", 
      RowBox[{"Cos", "[", "v", "]"}]}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "B", " ", 
     RowBox[{"Cos", "[", "v", "]"}]}], 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", "v", "]"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "A", " ", 
      RowBox[{"Cos", "[", "u", "]"}]}], "-", 
     RowBox[{"2", " ", "B", " ", 
      RowBox[{"Sin", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", "v", "]"}]}]}], 
    RowBox[{"4", "+", 
     RowBox[{"Cos", "[", "v", "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.670839961899487*^9, 3.670839979159679*^9}, 
   3.6708402113294888`*^9, 3.6708402835309772`*^9, 3.67091840147755*^9, 
   3.6709184736127357`*^9, 3.670919301554762*^9, {3.670921521388708*^9, 
   3.6709215319285088`*^9}, 3.670925005600893*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "B", " ", "x", " ", "y"}], "+", 
        RowBox[{"A", " ", "z"}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"4", "+", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "B", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}]}]]}], 
    RowBox[{"4", "+", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"4", " ", "A", " ", "x"}], "-", 
     RowBox[{"8", " ", "B", " ", "y", " ", "z"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.670839961899487*^9, 3.670839979159679*^9}, 
   3.6708402113294888`*^9, 3.6708402835309772`*^9, 3.67091840147755*^9, 
   3.6709184736127357`*^9, 3.670919301554762*^9, {3.670921521388708*^9, 
   3.6709215319285088`*^9}, 3.67092500566537*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "B", " ", "x", " ", "y"}], "+", 
        RowBox[{"A", " ", "z"}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "B", " ", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}]}]]}], 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     SqrtBox[
      RowBox[{"1", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "2"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"4", " ", "A", " ", "x"}], "-", 
     RowBox[{"8", " ", "B", " ", "y", " ", "z"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}]}]]}], ")"}], "2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.670839961899487*^9, 3.670839979159679*^9}, 
   3.6708402113294888`*^9, 3.6708402835309772`*^9, 3.67091840147755*^9, 
   3.6709184736127357`*^9, 3.670919301554762*^9, {3.670921521388708*^9, 
   3.6709215319285088`*^9}, 3.670925005744219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<S2[\>\"", ",", 
     RowBox[{"i", "-", "1"}], ",", "\"\<][\>\"", ",", 
     RowBox[{"j", "-", "1"}], ",", "\"\<] = \>\"", ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S2XYZP", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "//", "CForm"}], "//", 
         "N"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "\[Rule]", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "\[Rule]", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "}"}]}], 
      "]"}], ",", "\"\<;\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6708403619059343`*^9, 3.6708403713313417`*^9}, {
  3.670925114841568*^9, 3.6709251311798964`*^9}, {3.670925169901289*^9, 
  3.670925176505835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*(4.*pow(x,2)*pow(y,2)*pow(4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),2) + \
pow(-8. + 32.*pow(y,2) + sqrt(1. - 4.*pow(y,2))*(-17. + \
4.*pow(y,2)),2)*pow(z,2)))/(pow(4. + sqrt(1. - 4.*pow(y,2)),2)*pow(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 0, "][", 0, "] = ", 
   "(16.*(4.*pow(x,2)*pow(y,2)*pow(4. + sqrt(1. - 4.*pow(y,2)),2)*pow(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),2) + pow(-8. + 32.*pow(y,2) + sqrt(1. \
- 4.*pow(y,2))*(-17. + 4.*pow(y,2)),2)*pow(z,2)))/(pow(4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.6709251774374933`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*x*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - \
4.*pow(y,2))))/(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 0, "][", 1, "] = ", 
   "(16.*x*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - 4.*pow(y,2))))/(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.670925177494132*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*x*(-353. + 34512.*pow(y,2) - \
70752.*pow(y,4) + 15616.*pow(y,6) - 256.*pow(y,8) + 16.*sqrt(1. - \
4.*pow(y,2))*(-17. + 1934.*pow(y,2) - 1344.*pow(y,4) + \
96.*pow(y,6)))*z)/(pow(4. + sqrt(1. - 4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + \
8.*sqrt(1. - 4.*pow(y,2)),3))\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 0, "][", 2, "] = ", 
   "(16.*x*(-353. + 34512.*pow(y,2) - 70752.*pow(y,4) + 15616.*pow(y,6) - \
256.*pow(y,8) + 16.*sqrt(1. - 4.*pow(y,2))*(-17. + 1934.*pow(y,2) - \
1344.*pow(y,4) + 96.*pow(y,6)))*z)/(pow(4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.670925177496436*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*x*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - \
4.*pow(y,2))))/(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 1, "][", 0, "] = ", 
   "(16.*x*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - 4.*pow(y,2))))/(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.67092517749846*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"4. - 16.*pow(y,2)\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm["S2[", 1, "][", 1, "] = ", "4. - 16.*pow(y,2)", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.6709251775040407`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - \
4.*pow(y,2)))*z)/(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 1, "][", 2, "] = ", 
   "(16.*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - 4.*pow(y,2)))*z)/(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.670925177506002*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*x*(-353. + 34512.*pow(y,2) - \
70752.*pow(y,4) + 15616.*pow(y,6) - 256.*pow(y,8) + 16.*sqrt(1. - \
4.*pow(y,2))*(-17. + 1934.*pow(y,2) - 1344.*pow(y,4) + \
96.*pow(y,6)))*z)/(pow(4. + sqrt(1. - 4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + \
8.*sqrt(1. - 4.*pow(y,2)),3))\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 2, "][", 0, "] = ", 
   "(16.*x*(-353. + 34512.*pow(y,2) - 70752.*pow(y,4) + 15616.*pow(y,6) - \
256.*pow(y,8) + 16.*sqrt(1. - 4.*pow(y,2))*(-17. + 1934.*pow(y,2) - \
1344.*pow(y,4) + 96.*pow(y,6)))*z)/(pow(4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.6709251775083523`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - \
4.*pow(y,2)))*z)/(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 2, "][", 1, "] = ", 
   "(16.*y*(-1. + 4.*pow(y,2) - 4.*sqrt(1. - 4.*pow(y,2)))*z)/(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.670925177513308*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*(pow(x,2)*pow(-8. + 32.*pow(y,2) + sqrt(1. \
- 4.*pow(y,2))*(-17. + 4.*pow(y,2)),2) + 4.*pow(y,2)*pow(4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + 8.*sqrt(1. - \
4.*pow(y,2)),2)*pow(z,2)))/(pow(4. + sqrt(1. - 4.*pow(y,2)),2)*pow(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 2, "][", 2, "] = ", 
   "(16.*(pow(x,2)*pow(-8. + 32.*pow(y,2) + sqrt(1. - 4.*pow(y,2))*(-17. + \
4.*pow(y,2)),2) + 4.*pow(y,2)*pow(4. + sqrt(1. - 4.*pow(y,2)),2)*pow(17. - \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),2)*pow(z,2)))/(pow(4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(17. - 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670840373865696*^9, 3.670925132201953*^9, 
  3.670925177515729*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<S2[\>\"", ",", 
     RowBox[{"i", "-", "1"}], ",", "\"\<][\>\"", ",", 
     RowBox[{"j", "-", "1"}], ",", "\"\<] = \>\"", ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S2XYZM", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "//", "CForm"}], "//", 
         "N"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "\[Rule]", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "\[Rule]", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "}"}]}], 
      "]"}], ",", "\"\<;\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*(4.*pow(x,2)*pow(y,2)*(-8177. + \
64.*pow(y,6) + 7448.*sqrt(1. - 4.*pow(y,2)) + pow(y,2)*(17292. - \
5312.*sqrt(1. - 4.*pow(y,2))) + 48.*pow(y,4)*(-81. + 8.*sqrt(1. - \
4.*pow(y,2)))) + (-1. + 4.*pow(y,2))*(353. + 16.*pow(y,4) - 272.*sqrt(1. - \
4.*pow(y,2)) + 8.*pow(y,2)*(-49. + 8.*sqrt(1. - \
4.*pow(y,2))))*pow(z,2)))/(pow(-4. + sqrt(1. - 4.*pow(y,2)),2)*pow(-17. + \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 0, "][", 0, "] = ", 
   "(16.*(4.*pow(x,2)*pow(y,2)*(-8177. + 64.*pow(y,6) + 7448.*sqrt(1. - \
4.*pow(y,2)) + pow(y,2)*(17292. - 5312.*sqrt(1. - 4.*pow(y,2))) + \
48.*pow(y,4)*(-81. + 8.*sqrt(1. - 4.*pow(y,2)))) + (-1. + 4.*pow(y,2))*(353. \
+ 16.*pow(y,4) - 272.*sqrt(1. - 4.*pow(y,2)) + 8.*pow(y,2)*(-49. + 8.*sqrt(1. \
- 4.*pow(y,2))))*pow(z,2)))/(pow(-4. + sqrt(1. - 4.*pow(y,2)),2)*pow(-17. + \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925182673482*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(-16.*x*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - \
4.*pow(y,2))))/(-17. + 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 0, "][", 1, "] = ", 
   "(-16.*x*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - 4.*pow(y,2))))/(-17. + \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.67092518278152*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*x*(-353. + 34512.*pow(y,2) - \
70752.*pow(y,4) + 15616.*pow(y,6) - 256.*pow(y,8) - 16.*sqrt(1. - \
4.*pow(y,2))*(-17. + 1934.*pow(y,2) - 1344.*pow(y,4) + \
96.*pow(y,6)))*z)/(pow(17. - 4.*pow(y,2) - 8.*sqrt(1. - \
4.*pow(y,2)),3)*pow(-4. + sqrt(1. - 4.*pow(y,2)),2))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 0, "][", 2, "] = ", 
   "(16.*x*(-353. + 34512.*pow(y,2) - 70752.*pow(y,4) + 15616.*pow(y,6) - \
256.*pow(y,8) - 16.*sqrt(1. - 4.*pow(y,2))*(-17. + 1934.*pow(y,2) - \
1344.*pow(y,4) + 96.*pow(y,6)))*z)/(pow(17. - 4.*pow(y,2) - 8.*sqrt(1. - \
4.*pow(y,2)),3)*pow(-4. + sqrt(1. - 4.*pow(y,2)),2))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925182785239*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(-16.*x*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - \
4.*pow(y,2))))/(-17. + 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 1, "][", 0, "] = ", 
   "(-16.*x*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - 4.*pow(y,2))))/(-17. + \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925182788033*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"4. - 16.*pow(y,2)\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm["S2[", 1, "][", 1, "] = ", "4. - 16.*pow(y,2)", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925182791473*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(-16.*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - \
4.*pow(y,2)))*z)/(-17. + 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 1, "][", 2, "] = ", 
   "(-16.*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - 4.*pow(y,2)))*z)/(-17. + \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925182793947*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*x*(-353. + 34512.*pow(y,2) - \
70752.*pow(y,4) + 15616.*pow(y,6) - 256.*pow(y,8) - 16.*sqrt(1. - \
4.*pow(y,2))*(-17. + 1934.*pow(y,2) - 1344.*pow(y,4) + \
96.*pow(y,6)))*z)/(pow(17. - 4.*pow(y,2) - 8.*sqrt(1. - \
4.*pow(y,2)),3)*pow(-4. + sqrt(1. - 4.*pow(y,2)),2))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 2, "][", 0, "] = ", 
   "(16.*x*(-353. + 34512.*pow(y,2) - 70752.*pow(y,4) + 15616.*pow(y,6) - \
256.*pow(y,8) - 16.*sqrt(1. - 4.*pow(y,2))*(-17. + 1934.*pow(y,2) - \
1344.*pow(y,4) + 96.*pow(y,6)))*z)/(pow(17. - 4.*pow(y,2) - 8.*sqrt(1. - \
4.*pow(y,2)),3)*pow(-4. + sqrt(1. - 4.*pow(y,2)),2))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.6709251827979794`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(-16.*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - \
4.*pow(y,2)))*z)/(-17. + 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))\"\>", 
   "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 2, "][", 1, "] = ", 
   "(-16.*y*(-1. + 4.*pow(y,2) + 4.*sqrt(1. - 4.*pow(y,2)))*z)/(-17. + \
4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925182800488*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S2[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"][\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(16.*(pow(x,2)*(-1. + 4.*pow(y,2))*(353. + \
16.*pow(y,4) - 272.*sqrt(1. - 4.*pow(y,2)) + 8.*pow(y,2)*(-49. + 8.*sqrt(1. - \
4.*pow(y,2)))) + 4.*pow(y,2)*(-8177. + 64.*pow(y,6) + 7448.*sqrt(1. - \
4.*pow(y,2)) + pow(y,2)*(17292. - 5312.*sqrt(1. - 4.*pow(y,2))) + \
48.*pow(y,4)*(-81. + 8.*sqrt(1. - 4.*pow(y,2))))*pow(z,2)))/(pow(-4. + \
sqrt(1. - 4.*pow(y,2)),2)*pow(-17. + 4.*pow(y,2) + 8.*sqrt(1. - \
4.*pow(y,2)),3))\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "S2[", 2, "][", 2, "] = ", 
   "(16.*(pow(x,2)*(-1. + 4.*pow(y,2))*(353. + 16.*pow(y,4) - 272.*sqrt(1. - \
4.*pow(y,2)) + 8.*pow(y,2)*(-49. + 8.*sqrt(1. - 4.*pow(y,2)))) + \
4.*pow(y,2)*(-8177. + 64.*pow(y,6) + 7448.*sqrt(1. - 4.*pow(y,2)) + \
pow(y,2)*(17292. - 5312.*sqrt(1. - 4.*pow(y,2))) + 48.*pow(y,4)*(-81. + \
8.*sqrt(1. - 4.*pow(y,2))))*pow(z,2)))/(pow(-4. + sqrt(1. - \
4.*pow(y,2)),2)*pow(-17. + 4.*pow(y,2) + 8.*sqrt(1. - 4.*pow(y,2)),3))", ";"],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.6709251828035088`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<p0[\>\"", ",", 
     RowBox[{"i", "-", "1"}], ",", "\"\<] = \>\"", ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qXYZP", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "//", "CForm"}], "//", "N"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "\[Rule]", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "\[Rule]", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "}"}]}], 
      "]"}], ",", "\"\<;\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670840385575562*^9, 3.670840433509268*^9}, {
  3.6709251416810207`*^9, 3.670925152497685*^9}, {3.6709251895318604`*^9, 
  3.670925190646275*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"p0[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(-4.*(2.*B*x*y + A*z))/pow(4. + sqrt(1. - \
4.*pow(y,2)),2)\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "p0[", 0, "] = ", 
   "(-4.*(2.*B*x*y + A*z))/pow(4. + sqrt(1. - 4.*pow(y,2)),2)", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.670840406769197*^9, 3.6708404342360907`*^9}, 
   3.670918520972371*^9, 3.670925153239505*^9, 3.670925195273176*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"p0[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(2.*B*sqrt(1. - 4.*pow(y,2)))/(4. + sqrt(1. - \
4.*pow(y,2)))\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "p0[", 1, "] = ", 
   "(2.*B*sqrt(1. - 4.*pow(y,2)))/(4. + sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.670840406769197*^9, 3.6708404342360907`*^9}, 
   3.670918520972371*^9, 3.670925153239505*^9, 3.6709251952801437`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"p0[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(4.*A*x - 8.*B*y*z)/pow(4. + sqrt(1. - \
4.*pow(y,2)),2)\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "p0[", 2, "] = ", "(4.*A*x - 8.*B*y*z)/pow(4. + sqrt(1. - 4.*pow(y,2)),2)", 
   ";"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.670840406769197*^9, 3.6708404342360907`*^9}, 
   3.670918520972371*^9, 3.670925153239505*^9, 3.6709251952827682`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<p0[\>\"", ",", 
     RowBox[{"i", "-", "1"}], ",", "\"\<] = \>\"", ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qXYZM", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "//", "CForm"}], "//", "N"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}], ",", 
         RowBox[{"\"\<Cos\>\"", "\[Rule]", "\"\<cos\>\""}], ",", 
         RowBox[{"\"\<Sin\>\"", "\[Rule]", "\"\<sin\>\""}], ",", 
         RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "}"}]}], 
      "]"}], ",", "\"\<;\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"p0[\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(-4.*(2.*B*x*y + A*z))/pow(-4. + sqrt(1. - \
4.*pow(y,2)),2)\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "p0[", 0, "] = ", 
   "(-4.*(2.*B*x*y + A*z))/pow(-4. + sqrt(1. - 4.*pow(y,2)),2)", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.67092519739151*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"p0[\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(2.*B*sqrt(1. - 4.*pow(y,2)))/(-4. + sqrt(1. - \
4.*pow(y,2)))\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "p0[", 1, "] = ", 
   "(2.*B*sqrt(1. - 4.*pow(y,2)))/(-4. + sqrt(1. - 4.*pow(y,2)))", ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.67092519752425*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"p0[\"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"] = \"\>", 
   "\[InvisibleSpace]", "\<\"(4.*A*x - 8.*B*y*z)/pow(-4. + sqrt(1. - \
4.*pow(y,2)),2)\"\>", "\[InvisibleSpace]", "\<\";\"\>"}],
  SequenceForm[
  "p0[", 2, "] = ", "(4.*A*x - 8.*B*y*z)/pow(-4. + sqrt(1. - 4.*pow(y,2)),2)",
    ";"],
  Editable->False]], "Print",
 CellChangeTimes->{3.670925197526965*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 975},
WindowMargins->{{Automatic, 1024}, {Automatic, 0}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 1739, 38, 69, "Input"],
Cell[2321, 62, 1669, 38, 57, "Output"],
Cell[3993, 102, 1462, 24, 69, "Output"]
}, Open  ]],
Cell[5470, 129, 691, 21, 88, "Input"],
Cell[CellGroupData[{
Cell[6186, 154, 9126, 229, 392, "Input"],
Cell[15315, 385, 1881, 27, 30, "Output"],
Cell[17199, 414, 1901, 28, 47, "Output"],
Cell[19103, 444, 2404, 45, 48, "Output"],
Cell[21510, 491, 2225, 41, 47, "Output"],
Cell[23738, 534, 2174, 39, 50, "Output"],
Cell[25915, 575, 2003, 32, 47, "Output"],
Cell[27921, 609, 2094, 34, 30, "Output"],
Cell[30018, 645, 2538, 50, 57, "Output"],
Cell[32559, 697, 2562, 51, 57, "Output"],
Cell[35124, 750, 220988, 3597, 447, 102695, 1660, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256149, 4352, 1354, 40, 126, "Input"],
Cell[257506, 4394, 1232, 27, 47, "Output"],
Cell[258741, 4423, 1201, 26, 47, "Output"],
Cell[259945, 4451, 2074, 55, 60, "Output"],
Cell[262022, 4508, 4247, 120, 141, "Output"],
Cell[266272, 4630, 1260, 30, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267569, 4665, 591, 18, 50, "Input"],
Cell[268163, 4685, 598, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268798, 4702, 1485, 49, 164, "Input"],
Cell[270286, 4753, 1532, 44, 64, "Output"],
Cell[271821, 4799, 1801, 51, 64, "Output"],
Cell[273625, 4852, 1639, 48, 64, "Output"],
Cell[275267, 4902, 605, 12, 50, "Output"],
Cell[275875, 4916, 605, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276517, 4933, 743, 20, 88, "Input"],
Cell[277263, 4955, 9330, 269, 352, "Output"],
Cell[286596, 5226, 9917, 306, 421, "Output"],
Cell[296516, 5534, 12145, 367, 454, "Output"],
Cell[308664, 5903, 4922, 154, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313623, 6062, 2333, 61, 164, "Input"],
Cell[315959, 6125, 938, 18, 50, "Output"],
Cell[316900, 6145, 879, 15, 50, "Output"],
Cell[317782, 6162, 754, 10, 30, "Output"],
Cell[318539, 6174, 754, 10, 30, "Output"],
Cell[319296, 6186, 879, 15, 50, "Output"],
Cell[320178, 6203, 756, 10, 30, "Output"],
Cell[320937, 6215, 756, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321730, 6230, 1021, 25, 69, "Input"],
Cell[322754, 6257, 695, 17, 50, "Output"],
Cell[323452, 6276, 384, 5, 30, "Output"],
Cell[323839, 6283, 386, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324262, 6293, 1379, 40, 126, "Input"],
Cell[325644, 6335, 1076, 34, 60, "Output"],
Cell[326723, 6371, 389, 10, 50, "Output"],
Cell[327115, 6383, 1480, 46, 71, "Output"],
Cell[328598, 6431, 237, 4, 30, "Output"],
Cell[328838, 6437, 236, 4, 30, "Output"],
Cell[329077, 6443, 237, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329351, 6452, 787, 19, 69, "Input"],
Cell[330141, 6473, 1145, 32, 51, "Output"],
Cell[331289, 6507, 1338, 42, 78, "Output"],
Cell[332630, 6551, 1407, 45, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334074, 6601, 1157, 29, 50, "Input"],
Cell[CellGroupData[{
Cell[335256, 6634, 1039, 19, 62, "Print"],
Cell[336298, 6655, 659, 14, 23, "Print"],
Cell[336960, 6671, 979, 18, 62, "Print"],
Cell[337942, 6691, 658, 14, 23, "Print"],
Cell[338603, 6707, 474, 10, 23, "Print"],
Cell[339080, 6719, 659, 14, 23, "Print"],
Cell[339742, 6735, 981, 18, 62, "Print"],
Cell[340726, 6755, 659, 14, 23, "Print"],
Cell[341388, 6771, 1037, 19, 62, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[342474, 6796, 987, 26, 50, "Input"],
Cell[CellGroupData[{
Cell[343486, 6826, 1236, 22, 100, "Print"],
Cell[344725, 6850, 615, 13, 23, "Print"],
Cell[345343, 6865, 938, 18, 62, "Print"],
Cell[346284, 6885, 616, 13, 23, "Print"],
Cell[346903, 6900, 425, 9, 23, "Print"],
Cell[347331, 6911, 616, 13, 23, "Print"],
Cell[347950, 6926, 940, 18, 62, "Print"],
Cell[348893, 6946, 616, 13, 23, "Print"],
Cell[349512, 6961, 1237, 22, 100, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350798, 6989, 1006, 25, 50, "Input"],
Cell[CellGroupData[{
Cell[351829, 7018, 532, 11, 23, "Print"],
Cell[352364, 7031, 538, 11, 23, "Print"],
Cell[352905, 7044, 528, 11, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353482, 7061, 838, 22, 50, "Input"],
Cell[CellGroupData[{
Cell[354345, 7087, 437, 10, 23, "Print"],
Cell[354785, 7099, 441, 10, 23, "Print"],
Cell[355229, 7111, 432, 10, 23, "Print"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
